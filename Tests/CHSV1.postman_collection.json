{
	"info": {
		"_postman_id": "e3919122-04bb-493e-a37c-c6e819b229e3",
		"name": "CHSV1",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "1 Nuke",
			"item": [
				{
					"name": "Register Student A",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8e545e6d-1575-445b-866a-746c716e3ec5",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"pm.test(\"Body is correct\", () => pm.response.to.have.body(''));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"Us\",\n    \"firstName\": \"FirstA\",\n    \"lastName\" : \"LastA\",\n    \"password\" : \"passwordA\",\n    \"role\"     : 0,\n    \"termsAccepted\": true\n}"
						},
						"url": {
							"raw": "{{url}}/Prss",
							"host": [
								"{{url}}"
							],
							"path": [
								"Prss"
							]
						},
						"description": "\n"
					},
					"response": []
				},
				{
					"name": "Login Student A",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3b492d08-fb44-454d-9409-bcdce0709500",
								"exec": [
									"loginCheck(pm);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"Us\",\n    \"password\" : \"passwordA\"\n}"
						},
						"url": {
							"raw": "{{url}}/Ssns",
							"host": [
								"{{url}}"
							],
							"path": [
								"Ssns"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register Password null",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b78d0270-0ab9-437b-9f73-ecd53695b6fe",
								"exec": [
									"pm.test(\"Status 400\", () => pm.response.to.have.status(400));",
									"pm.test(\"Body is correct\", () => pm.expect(pm.response.json()[0].tag).is.equal('missingField'));",
									"pm.test(\"Body is correct\", () => pm.expect(pm.response.json()[0].params[0]).is.equal('password'));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"UserA@domainA\",\n    \"firstName\": \"FirstA\",\n    \"lastName\" : \"LastA\",\n    \"password\" : null,\n    \"role\"     : 0,\n    \"termsAccepted\": false\n}"
						},
						"url": {
							"raw": "{{url}}/Prss",
							"host": [
								"{{url}}"
							],
							"path": [
								"Prss"
							]
						},
						"description": "\n"
					},
					"response": []
				},
				{
					"name": "Register email long",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "49bb7714-af3a-481b-b622-ed3f42d2e245",
								"exec": [
									"pm.test(\"Status 400\", () => pm.response.to.have.status(400));",
									"pm.test(\"Params is email\", () => pm.expect(pm.response.json()[0].params[0]).is.equal('email'));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"UserA@domainAierwhf iuwhergh wierhf wherfiouhw erifhiowe rhfwherf werfhweirhfoiwh erfhweriufhweiurhf iwehrfiouwh erfiu hweoriufhwoeuir hfiuwehr fiuweh rfiuh werifh weiroufhwioer iwuehrfiu wherifuhw eiro wioerh fiuwehr fiuwh eriufhwieurf iuwerhf iuwehrfiuwh eriufhw eirfhiuwerh fiuwehr fiuhweriouf hweiurh fiuwehr fiuhw eriufh weriufhweiuorhfiowe rhfiuowherfiou weriufh wieor hfiowehrfoiw ehrifuh weri wierhf iwerhfiowe hrfiwehr fio whreiou hwioerhfiowe rhfiowue hrfio hwerio iwoerh iower hfiowerh fiouweh rfiuwh erfio weroifhwieourf iwoehr fiuowehr fiow herifhweirf hwierfh\",\n    \"firstName\": \"FirstA\",\n    \"lastName\" : \"LastA\",\n    \"password\" : \"passwordA\",\n    \"role\"     : 0,\n    \"termsAccepted\": true\n}"
						},
						"url": {
							"raw": "{{url}}/Prss",
							"host": [
								"{{url}}"
							],
							"path": [
								"Prss"
							]
						},
						"description": "\n"
					},
					"response": []
				},
				{
					"name": "Register firstName long",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "08cf1fe6-d70e-4088-83c2-6e8043cd754c",
								"exec": [
									"pm.test(\"Status 400\", () => pm.response.to.have.status(400));",
									"pm.test(\"Params is firstName\", () => pm.expect(pm.response.json()[0].params[0]).is.equal('firstName'));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"UserA@domainHWIOEJF\",\n    \"firstName\": \"UserA@domainAierwhf iuwhergh wierhf wherfiouhw erifhiowe rhfwherf werfhweirhfoiwh erfhweriufhweiurhf iwehrfiouwh erfiu hweoriufhwoeuir hfiuwehr fiuweh rfiuh werifh weiroufhwioer iwuehrfiu wherifuhw eiro wioerh fiuwehr fiuwh eriufhwieurf iuwerhf iuwehrfiuwh eriufhw eirfhiuwerh fiuwehr fiuhweriouf hweiurh fiuwehr fiuhw eriufh weriufhweiuorhfiowe rhfiuowherfiou weriufh wieor hfiowehrfoiw ehrifuh weri wierhf iwerhfiowe hrfiwehr fio whreiou hwioerhfiowe rhfiowue hrfio hwerio iwoerh iower hfiowerh fiouweh rfiuwh erfio weroifhwieourf iwoehr fiuowehr fiow herifhweirf hwierfh\",\n    \"lastName\" : \"LastA\",\n    \"password\" : \"passwordA\",\n    \"role\"     : 0,\n    \"termsAccepted\": true\n}"
						},
						"url": {
							"raw": "{{url}}/Prss",
							"host": [
								"{{url}}"
							],
							"path": [
								"Prss"
							]
						},
						"description": "\n"
					},
					"response": []
				},
				{
					"name": "Register lastName long",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "37a37d33-2136-410a-8e7f-5354ec09a8eb",
								"exec": [
									"pm.test(\"Status 400\", () => pm.response.to.have.status(400));",
									"pm.test(\"Params is lastName\", () => pm.expect(pm.response.json()[0].params[0]).is.equal('lastName'));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"UserA@domainAwefwqe\",\n    \"firstName\": \"FirstA\",\n    \"lastName\" : \"UserA@domainAierwhf iuwhergh wierhf wherfiouhw erifhiowe rhfwherf werfhweirhfoiwh erfhweriufhweiurhf iwehrfiouwh erfiu hweoriufhwoeuir hfiuwehr fiuweh rfiuh werifh weiroufhwioer iwuehrfiu wherifuhw eiro wioerh fiuwehr fiuwh eriufhwieurf iuwerhf iuwehrfiuwh eriufhw eirfhiuwerh fiuwehr fiuhweriouf hweiurh fiuwehr fiuhw eriufh weriufhweiuorhfiowe rhfiuowherfiou weriufh wieor hfiowehrfoiw ehrifuh weri wierhf iwerhfiowe hrfiwehr fio whreiou hwioerhfiowe rhfiowue hrfio hwerio iwoerh iower hfiowerh fiouweh rfiuwh erfio weroifhwieourf iwoehr fiuowehr fiow herifhweirf hwierfh\",\n    \"password\" : \"passwordA\",\n    \"role\"     : 0,\n    \"termsAccepted\": true\n}"
						},
						"url": {
							"raw": "{{url}}/Prss",
							"host": [
								"{{url}}"
							],
							"path": [
								"Prss"
							]
						},
						"description": "\n"
					},
					"response": []
				},
				{
					"name": "Register password long",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d8c75784-3518-44f0-96b3-b30f00b85711",
								"exec": [
									"pm.test(\"Status 400\", () => pm.response.to.have.status(400));",
									"pm.test(\"Params is password\", () => pm.expect(pm.response.json()[0].params[0]).is.equal('password'));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"UserA@domainAewfwe\",\n    \"firstName\": \"FirstA\",\n    \"lastName\" : \"LastA\",\n    \"password\" : \"UserA@domainAierwhf iuwhergh wierhf wherfiouhw erifhiowe rhfwherf werfhweirhfoiwh erfhweriufhweiurhf iwehrfiouwh erfiu hweoriufhwoeuir hfiuwehr fiuweh rfiuh werifh weiroufhwioer iwuehrfiu wherifuhw eiro wioerh fiuwehr fiuwh eriufhwieurf iuwerhf iuwehrfiuwh eriufhw eirfhiuwerh fiuwehr fiuhweriouf hweiurh fiuwehr fiuhw eriufh weriufhweiuorhfiowe rhfiuowherfiou weriufh wieor hfiowehrfoiw ehrifuh weri wierhf iwerhfiowe hrfiwehr fio whreiou hwioerhfiowe rhfiowue hrfio hwerio iwoerh iower hfiowerh fiouweh rfiuwh erfio weroifhwieourf iwoehr fiuowehr fiow herifhweirf hwierfh\",\n    \"role\"     : 0,\n    \"termsAccepted\": true\n}"
						},
						"url": {
							"raw": "{{url}}/Prss",
							"host": [
								"{{url}}"
							],
							"path": [
								"Prss"
							]
						},
						"description": "\n"
					},
					"response": []
				},
				{
					"name": "Register all long",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f2d7e872-3900-4aa2-88b5-02a65f27a3c1",
								"exec": [
									"pm.test(\"Status 400\", () => pm.response.to.have.status(400));",
									"pm.test(\"Params is email\", () => pm.expect(pm.response.json()[0].params[0]).is.equal('email'));",
									"pm.test(\"Params is firstName\", () => pm.expect(pm.response.json()[1].params[0]).is.equal('firstName'));",
									"pm.test(\"Params is lastName\", () => pm.expect(pm.response.json()[2].params[0]).is.equal('lastName'));",
									"pm.test(\"Params is password\", () => pm.expect(pm.response.json()[3].params[0]).is.equal('password'));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"UserA@domainAierwhf iuwhergh wierhf wherfiouhw erifhiowe rhfwherf werfhweirhfoiwh erfhweriufhweiurhf iwehrfiouwh erfiu hweoriufhwoeuir hfiuwehr fiuweh rfiuh werifh weiroufhwioer iwuehrfiu wherifuhw eiro wioerh fiuwehr fiuwh eriufhwieurf iuwerhf iuwehrfiuwh eriufhw eirfhiuwerh fiuwehr fiuhweriouf hweiurh fiuwehr fiuhw eriufh weriufhweiuorhfiowe rhfiuowherfiou weriufh wieor hfiowehrfoiw ehrifuh weri wierhf iwerhfiowe hrfiwehr fio whreiou hwioerhfiowe rhfiowue hrfio hwerio iwoerh iower hfiowerh fiouweh rfiuwh erfio weroifhwieourf iwoehr fiuowehr fiow herifhweirf hwierfh\",\n    \"firstName\": \"UserA@domainAierwhf iuwhergh wierhf wherfiouhw erifhiowe rhfwherf werfhweirhfoiwh erfhweriufhweiurhf iwehrfiouwh erfiu hweoriufhwoeuir hfiuwehr fiuweh rfiuh werifh weiroufhwioer iwuehrfiu wherifuhw eiro wioerh fiuwehr fiuwh eriufhwieurf iuwerhf iuwehrfiuwh eriufhw eirfhiuwerh fiuwehr fiuhweriouf hweiurh fiuwehr fiuhw eriufh weriufhweiuorhfiowe rhfiuowherfiou weriufh wieor hfiowehrfoiw ehrifuh weri wierhf iwerhfiowe hrfiwehr fio whreiou hwioerhfiowe rhfiowue hrfio hwerio iwoerh iower hfiowerh fiouweh rfiuwh erfio weroifhwieourf iwoehr fiuowehr fiow herifhweirf hwierfh\",\n    \"lastName\" : \"UserA@domainAierwhf iuwhergh wierhf wherfiouhw erifhiowe rhfwherf werfhweirhfoiwh erfhweriufhweiurhf iwehrfiouwh erfiu hweoriufhwoeuir hfiuwehr fiuweh rfiuh werifh weiroufhwioer iwuehrfiu wherifuhw eiro wioerh fiuwehr fiuwh eriufhwieurf iuwerhf iuwehrfiuwh eriufhw eirfhiuwerh fiuwehr fiuhweriouf hweiurh fiuwehr fiuhw eriufh weriufhweiuorhfiowe rhfiuowherfiou weriufh wieor hfiowehrfoiw ehrifuh weri wierhf iwerhfiowe hrfiwehr fio whreiou hwioerhfiowe rhfiowue hrfio hwerio iwoerh iower hfiowerh fiouweh rfiuwh erfio weroifhwieourf iwoehr fiuowehr fiow herifhweirf hwierfh\",\n    \"password\" : \"UserA@domainAierwhf iuwhergh wierhf wherfiouhw erifhiowe rhfwherf werfhweirhfoiwh erfhweriufhweiurhf iwehrfiouwh erfiu hweoriufhwoeuir hfiuwehr fiuweh rfiuh werifh weiroufhwioer iwuehrfiu wherifuhw eiro wioerh fiuwehr fiuwh eriufhwieurf iuwerhf iuwehrfiuwh eriufhw eirfhiuwerh fiuwehr fiuhweriouf hweiurh fiuwehr fiuhw eriufh weriufhweiuorhfiowe rhfiuowherfiou weriufh wieor hfiowehrfoiw ehrifuh weri wierhf iwerhfiowe hrfiwehr fio whreiou hwioerhfiowe rhfiowue hrfio hwerio iwoerh iower hfiowerh fiouweh rfiuwh erfio weroifhwieourf iwoehr fiuowehr fiow herifhweirf hwierfh\",\n    \"role\"     : 0,\n    \"termsAccepted\": true\n}"
						},
						"url": {
							"raw": "{{url}}/Prss",
							"host": [
								"{{url}}"
							],
							"path": [
								"Prss"
							]
						},
						"description": "\n"
					},
					"response": []
				},
				{
					"name": "Register non json",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "75ea8ba3-f86b-4408-9717-141061a827f0",
								"exec": [
									"pm.test(\"Status 500\", () => pm.response.to.have.status(500));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "What even is JSON?"
						},
						"url": {
							"raw": "{{url}}/Prss",
							"host": [
								"{{url}}"
							],
							"path": [
								"Prss"
							]
						},
						"description": "\n"
					},
					"response": []
				},
				{
					"name": "Register Student A Dup",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f17a5ed3-c29b-498b-8483-5981bde39bb0",
								"exec": [
									"pm.test(\"Status 400\", () => pm.response.to.have.status(400));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"Us\",\n    \"firstName\": \"FirstA\",\n    \"lastName\" : \"LastA\",\n    \"password\" : \"passwordA\",\n    \"role\"     : 0,\n    \"termsAccepted\": true\n}"
						},
						"url": {
							"raw": "{{url}}/Prss",
							"host": [
								"{{url}}"
							],
							"path": [
								"Prss"
							]
						},
						"description": "\n"
					},
					"response": []
				},
				{
					"name": "NEW get someone else",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f8ed794e-89d0-4c7c-98a4-b8a0aae0e88c",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"",
									"pm.test(\"Content\", () => pm.expect(pm.response.json().length).is.eql(0));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/Prss?email=adm",
							"host": [
								"{{url}}"
							],
							"path": [
								"Prss"
							],
							"query": [
								{
									"key": "email",
									"value": "adm"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "NEW get myself Us",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e80206db-d885-4b4f-bd51-ec4a3b8581b6",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"",
									"pm.test(\"Content\", () => pm.expect(pm.response.json().length).is.eql(1));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/Prss?email=Us",
							"host": [
								"{{url}}"
							],
							"path": [
								"Prss"
							],
							"query": [
								{
									"key": "email",
									"value": "Us"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Admin Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e91f6e85-6f4b-4141-8a3f-9c172d68b010",
								"exec": [
									"loginCheck(pm);",
									"pm.test(\"Body is correct\", () => pm.response.to.have.body(''));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"adm@11.com\",\n    \"password\": \"password\",\n    \"id\": 9\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Ssns",
							"host": [
								"{{url}}"
							],
							"path": [
								"Ssns"
							],
							"query": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Reset",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "621525e9-a3cd-4ea2-acc1-022f51ea602c",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"pm.test(\"No body\", () => !pm.response.to.have.body);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/DB",
							"host": [
								"{{url}}"
							],
							"path": [
								"DB"
							]
						}
					},
					"response": []
				},
				{
					"name": "Admin Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7c0a8c8a-c7c0-4f31-9e87-6b239db07678",
								"exec": [
									"loginCheck(pm);",
									"pm.test(\"Body is correct\", () => pm.response.to.have.body(''));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"adm@11.com\",\n    \"password\": \"password\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Ssns",
							"host": [
								"{{url}}"
							],
							"path": [
								"Ssns"
							],
							"query": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Check sessions deleted",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4c47bb1a-1c7b-445c-8ed7-a303328819fd",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"",
									"pm.test(\"Status 200\", () => pm.expect(pm.response.json().length).is.eql(1));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/Ssns",
							"host": [
								"{{url}}"
							],
							"path": [
								"Ssns"
							]
						}
					},
					"response": []
				},
				{
					"name": "Reset",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "69644767-9125-4dff-ba3d-1696e43bc134",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"pm.test(\"No body\", () => !pm.response.to.have.body);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/DB",
							"host": [
								"{{url}}"
							],
							"path": [
								"DB"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "2 Prss/Ssns",
			"item": [
				{
					"name": "Register Student A",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0b2aca44-9464-4476-8189-b88d1f8bc064",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"pm.test(\"Body is correct\", () => pm.response.to.have.body(''));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"UserA@domainA\",\n    \"firstName\": \"FirstA\",\n    \"lastName\" : \"LastA\",\n    \"password\" : \"passwordA\",\n    \"role\"     : 0,\n    \"termsAccepted\": true\n}"
						},
						"url": {
							"raw": "{{url}}/Prss",
							"host": [
								"{{url}}"
							],
							"path": [
								"Prss"
							]
						},
						"description": "\n"
					},
					"response": []
				},
				{
					"name": "Register Student K",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "47271e5a-7b55-4262-9e63-b95f8ff9c424",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"pm.test(\"Body is correct\", () => pm.response.to.have.body(''));",
									"",
									"let locURL;",
									"locURL = pm.response.headers.get(\"Location\");",
									"locURL = locURL && locURL.split('/');",
									"pm.collectionVariables.set(\"usrK\", locURL[locURL.length-1]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"UserK@domainA\",\n    \"firstName\": \"FirstA\",\n    \"lastName\" : \"LastA\",\n    \"password\" : \"passwordA\",\n    \"role\"     : 0,\n    \"termsAccepted\": true\n}"
						},
						"url": {
							"raw": "{{url}}/Prss",
							"host": [
								"{{url}}"
							],
							"path": [
								"Prss"
							]
						},
						"description": "\n"
					},
					"response": []
				},
				{
					"name": "Register Student K different domain",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "27983d53-2c53-4f99-be1e-60da2d3cc92c",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"pm.test(\"Body is correct\", () => pm.response.to.have.body(''));",
									"",
									"let locURL;",
									"locURL = pm.response.headers.get(\"Location\");",
									"locURL = locURL && locURL.split('/');",
									"pm.collectionVariables.set(\"diffDomain\", locURL[locURL.length-1]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"UserK@domainK\",\n    \"firstName\": \"FirstA\",\n    \"lastName\" : \"LastA\",\n    \"password\" : \"passwordA\",\n    \"role\"     : 0,\n    \"termsAccepted\": true\n}"
						},
						"url": {
							"raw": "{{url}}/Prss",
							"host": [
								"{{url}}"
							],
							"path": [
								"Prss"
							]
						},
						"description": "\n"
					},
					"response": []
				},
				{
					"name": "Register Student SQL injection",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "92f44024-268e-4238-9252-733121c09a40",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"pm.test(\"Body is correct\", () => pm.response.to.have.body(''));",
									"",
									"let locURL;",
									"locURL = pm.response.headers.get(\"Location\");",
									"locURL = locURL && locURL.split('/');",
									"pm.collectionVariables.set(\"injection\", locURL[locURL.length-1]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"UserA@domainA;\\\" DROP TABLE *\",\n    \"firstName\": \"john\",\n    \"lastName\" : \"last\",\n    \"password\" : \"Johnny\",\n    \"role\"     : 0,\n    \"termsAccepted\": 1\n}"
						},
						"url": {
							"raw": "{{url}}/Prss",
							"host": [
								"{{url}}"
							],
							"path": [
								"Prss"
							]
						},
						"description": "\n"
					},
					"response": []
				},
				{
					"name": "Register Student w/o Body",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3e4b2e9b-e214-459f-b420-275a3288ddf9",
								"exec": [
									"pm.test(\"Status 400\", () => pm.response.to.have.status(400));",
									"",
									"pm.test(\"caught 4 missing fields\", () => pm.expect(pm.response.json().length).is.eql(4));",
									"pm.test(\"missingField tag\", () => pm.expect(pm.response.text()).to.include(\"missingField\"));",
									"pm.test(\"email is missing\", () => pm.expect(pm.response.json()[0].params[0]).is.eql(\"email\"));",
									"pm.test(\"email is missing\", () => pm.expect(pm.response.json()[1].params[0]).is.eql(\"password\"));",
									"pm.test(\"email is missing\", () => pm.expect(pm.response.json()[2].params[0]).is.eql(\"lastName\"));",
									"pm.test(\"email is missing\", () => pm.expect(pm.response.json()[3].params[0]).is.eql(\"role\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\n}"
						},
						"url": {
							"raw": "{{url}}/Prss",
							"host": [
								"{{url}}"
							],
							"path": [
								"Prss"
							]
						},
						"description": "\n"
					},
					"response": []
				},
				{
					"name": "Register duplicate email",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cd443b84-4127-4002-84eb-a95e4ae148c7",
								"exec": [
									"pm.test(\"Status 400\", () => pm.response.to.have.status(400));",
									"",
									"pm.test(\"dupEmail tag\", () => pm.expect(pm.response.text()).to.include(\"dupEmail\"));",
									"pm.test(\"params null\", () => pm.expect(pm.response.json()[0].params).is.eql(null));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"UserA@domainA\",\n    \"firstName\": \"newA\",\n    \"lastName\" : \"newA\",\n    \"password\" : \"passwordA\",\n    \"role\"     : 0,\n    \"termsAccepted\": true\n}"
						},
						"url": {
							"raw": "{{url}}/Prss",
							"host": [
								"{{url}}"
							],
							"path": [
								"Prss"
							]
						},
						"description": "\n"
					},
					"response": []
				},
				{
					"name": "Register Terms not accepted",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5ba4ec74-a51c-43ac-9d4a-6dfd7536c4e4",
								"exec": [
									"",
									"pm.test(\"Status 400\", () => pm.response.to.have.status(400));",
									"",
									"pm.test(\"Terms not accepted tag present\", () => pm.expect(pm.response.text()).to.include(\"noTerms\"));",
									"pm.test(\"params null\", () => pm.expect(pm.response.json()[0].params).is.eql(null));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"Noterms@notatakendomain\",\n    \"firstName\": \"FirstA\",\n    \"lastName\" : \"LastA\",\n    \"password\" : \"passwordA\",\n    \"role\"     : 0,\n    \"termsAccepted\": false\n}"
						},
						"url": {
							"raw": "{{url}}/Prss",
							"host": [
								"{{url}}"
							],
							"path": [
								"Prss"
							]
						},
						"description": "\n"
					},
					"response": []
				},
				{
					"name": "Register Terms falsey",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c2607646-477e-407c-8657-b93f36150bab",
								"exec": [
									"",
									"pm.test(\"Status 400\", () => pm.response.to.have.status(400));",
									"",
									"pm.test(\"Terms not accepted tag present\", () => pm.expect(pm.response.text()).to.include(\"noTerms\"));",
									"pm.test(\"params null\", () => pm.expect(pm.response.json()[0].params).is.eql(null));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"Noterms@notatakendomain\",\n    \"firstName\": \"FirstA\",\n    \"lastName\" : \"LastA\",\n    \"password\" : \"passwordA\",\n    \"role\"     : 0,\n    \"termsAccepted\": null\n}"
						},
						"url": {
							"raw": "{{url}}/Prss",
							"host": [
								"{{url}}"
							],
							"path": [
								"Prss"
							]
						},
						"description": "\n"
					},
					"response": []
				},
				{
					"name": "Register Terms falsey 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6358a32e-412a-4b2d-8a09-8ba1c9b8fbf2",
								"exec": [
									"",
									"pm.test(\"Status 400\", () => pm.response.to.have.status(400));",
									"",
									"pm.test(\"Terms not accepted tag present\", () => pm.expect(pm.response.text()).to.include(\"noTerms\"));",
									"pm.test(\"params null\", () => pm.expect(pm.response.json()[0].params).is.eql(null));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"Noterms@notatakendomain\",\n    \"firstName\": \"FirstA\",\n    \"lastName\" : \"LastA\",\n    \"password\" : \"passwordA\",\n    \"role\"     : 0,\n    \"termsAccepted\": 0\n}"
						},
						"url": {
							"raw": "{{url}}/Prss",
							"host": [
								"{{url}}"
							],
							"path": [
								"Prss"
							]
						},
						"description": "\n"
					},
					"response": []
				},
				{
					"name": "Register Terms falsey 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "06084067-ac94-45b9-83db-8d66cdebd8c8",
								"exec": [
									"",
									"pm.test(\"Status 400\", () => pm.response.to.have.status(400));",
									"",
									"pm.test(\"Terms not accepted tag present\", () => pm.expect(pm.response.text()).to.include(\"noTerms\"));",
									"pm.test(\"params null\", () => pm.expect(pm.response.json()[0].params).is.eql(null));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"Noterms@notatakendomain\",\n    \"firstName\": \"FirstA\",\n    \"lastName\" : \"LastA\",\n    \"password\" : \"passwordA\",\n    \"role\"     : 0,\n    \"termsAccepted\": \"\"\n}"
						},
						"url": {
							"raw": "{{url}}/Prss",
							"host": [
								"{{url}}"
							],
							"path": [
								"Prss"
							]
						},
						"description": "\n"
					},
					"response": []
				},
				{
					"name": "Register no firstName",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ea084ec9-77f1-4267-a703-e3369acab0b9",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"pm.test(\"Body is correct\", () => pm.response.to.have.body(''));",
									"",
									"let locURL;",
									"locURL = pm.response.headers.get(\"Location\");",
									"locURL = locURL && locURL.split('/');",
									"pm.collectionVariables.set(\"noFirstName\", locURL[locURL.length-1]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"noName@DomainB\",\n    \"lastName\" : \"LastB\",\n    \"password\" : \"passwordB\",\n    \"role\"     : 0,\n    \"termsAccepted\": true\n}"
						},
						"url": {
							"raw": "{{url}}/Prss",
							"host": [
								"{{url}}"
							],
							"path": [
								"Prss"
							]
						},
						"description": "Should fail trying to make admin"
					},
					"response": []
				},
				{
					"name": "Register An Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "eaf601d8-ddbc-451a-a41d-c5b902896ce4",
								"exec": [
									"pm.test(\"Status 400\", () => pm.response.to.have.status(400));",
									"",
									"pm.test(\"Forbidden Role tag present\", () => pm.expect(pm.response.text()).to.include(\"forbiddenRole\"));",
									"pm.test(\"params null\", () => pm.expect(pm.response.json()[0].params).is.eql(null));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"UserB@domainB\",\n    \"firstName\": \"FirstB\",\n    \"lastName\" : \"LastB\",\n    \"password\" : \"passwordB\",\n    \"role\"     : 1,\n    \"termsAccepted\": true\n}"
						},
						"url": {
							"raw": "{{url}}/Prss",
							"host": [
								"{{url}}"
							],
							"path": [
								"Prss"
							]
						},
						"description": "Should fail trying to make admin"
					},
					"response": []
				},
				{
					"name": "Register empty password",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "17adf2da-3b07-40f0-acfb-07a245231901",
								"exec": [
									"pm.test(\"Status 400\", () => pm.response.to.have.status(400));",
									"",
									"pm.test(\"missingField tag is present\", () => pm.expect(pm.response.text()).to.include(\"missingField\"));",
									"pm.test(\"params password\", () => pm.expect(pm.response.json()[0].params[0]).is.eql(\"password\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"UserB@domainB\",\n    \"firstName\": \"FirstB\",\n    \"lastName\" : \"LastB\",\n    \"password\" : \"\",\n    \"role\"     : 0,\n    \"termsAccepted\": true\n}"
						},
						"url": {
							"raw": "{{url}}/Prss",
							"host": [
								"{{url}}"
							],
							"path": [
								"Prss"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST Sns no body",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3509d377-cdd5-402c-b26c-66e45cdd7a82",
								"exec": [
									"pm.test(\"Status 400\", () => pm.response.to.have.status(400));",
									"",
									"pm.test(\"badLogin tag\", () => pm.expect(pm.response.text()).to.include(\"badLogin\"));",
									"pm.test(\"params is null\", () => pm.expect(pm.response.json()[0].params).is.eql(null));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Ssns",
							"host": [
								"{{url}}"
							],
							"path": [
								"Ssns"
							],
							"query": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET prs no login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f9353f12-1481-4a27-834c-b1e83656ae2e",
								"exec": [
									"pm.test(\"Status 401\", () => pm.response.to.have.status(401));"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/Prss",
							"host": [
								"{{url}}"
							],
							"path": [
								"Prss"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET prs/prsId no login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a9f3e76f-88c6-4c88-8228-200ff7a0c259",
								"exec": [
									"pm.test(\"Status 401\", () => pm.response.to.have.status(401));"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/Prss/1",
							"host": [
								"{{url}}"
							],
							"path": [
								"Prss",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT prss/prsId no login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c2d9d708-a620-45d6-98a9-f7ccf367178c",
								"exec": [
									"pm.test(\"Status 401\", () => pm.response.to.have.status(401));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"termsAccepted\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Prss/2",
							"host": [
								"{{url}}"
							],
							"path": [
								"Prss",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "DEL prss/prsId no login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cc899cbd-2390-4f29-9225-73e051ee0db3",
								"exec": [
									"pm.test(\"Status 401\", () => pm.response.to.have.status(401));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"termsAccepted\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Prss/2",
							"host": [
								"{{url}}"
							],
							"path": [
								"Prss",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Ssns no login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c24361ff-4f78-4b6f-b9e3-b3944a8e65b5",
								"exec": [
									"pm.test(\"Status 401\", () => pm.response.to.have.status(401));"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"termsAccepted\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Ssns",
							"host": [
								"{{url}}"
							],
							"path": [
								"Ssns"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Ssns/id no login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0b53b3ae-e0c9-4f86-9596-23b910bd1bb6",
								"exec": [
									"pm.test(\"Status 401\", () => pm.response.to.have.status(401));"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"termsAccepted\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Ssns/2",
							"host": [
								"{{url}}"
							],
							"path": [
								"Ssns",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "DEL Ssns/id no login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a88192f7-8cfa-42fe-8e29-2e9d5842811e",
								"exec": [
									"pm.test(\"Status 401\", () => pm.response.to.have.status(401));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"termsAccepted\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Ssns/2",
							"host": [
								"{{url}}"
							],
							"path": [
								"Ssns",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Cnvs no login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2fda02dd-e945-4a5d-babc-c4084eaaa822",
								"exec": [
									"pm.test(\"Status 401\", () => pm.response.to.have.status(401));"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"termsAccepted\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Cnvs",
							"host": [
								"{{url}}"
							],
							"path": [
								"Cnvs"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST Cnvs no login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "169f18fd-5eeb-4467-a72b-3f598a9b47fa",
								"exec": [
									"pm.test(\"Status 401\", () => pm.response.to.have.status(401));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"termsAccepted\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Cnvs",
							"host": [
								"{{url}}"
							],
							"path": [
								"Cnvs"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Cnvs/cnvid no login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9b04b537-884e-49f4-a7c7-171c07ef3146",
								"exec": [
									"pm.test(\"Status 401\", () => pm.response.to.have.status(401));"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"termsAccepted\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Cnvs/2",
							"host": [
								"{{url}}"
							],
							"path": [
								"Cnvs",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST Cnvs/cnvId no login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0765e901-549b-4188-8c87-13d30aadf163",
								"exec": [
									"pm.test(\"Status 401\", () => pm.response.to.have.status(401));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"termsAccepted\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Cnvs/2",
							"host": [
								"{{url}}"
							],
							"path": [
								"Cnvs",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET cnvs/cnvId/Msgs no login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "22901f10-119b-43d4-87ce-79ed094e46f7",
								"exec": [
									"pm.test(\"Status 401\", () => pm.response.to.have.status(401));"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"termsAccepted\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Cnvs/2/0",
							"host": [
								"{{url}}"
							],
							"path": [
								"Cnvs",
								"2",
								"0"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST cnvs/cnvId/Msgs no login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5f5d79b8-10b1-488b-9294-956626e7b0f4",
								"exec": [
									"pm.test(\"Status 401\", () => pm.response.to.have.status(401));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"termsAccepted\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Cnvs/2/0",
							"host": [
								"{{url}}"
							],
							"path": [
								"Cnvs",
								"2",
								"0"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Msgs/msgId no login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "33b5dd80-adf9-414c-84ae-9cc8d54fb49c",
								"exec": [
									"pm.test(\"Status 401\", () => pm.response.to.have.status(401));"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"termsAccepted\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Msgs/0",
							"host": [
								"{{url}}"
							],
							"path": [
								"Msgs",
								"0"
							]
						}
					},
					"response": []
				},
				{
					"name": "NT Admin login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2518f23d-2398-43e8-b0ee-96eb7ccaa2b1",
								"exec": [
									"loginCheck(pm);",
									"",
									"",
									"let loc = pm.response.headers.get(\"Location\").split('/')[2];",
									"pm.test(\"location is zero\", () => pm.expect(loc).to.eql('0'));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"adm@11.com\",\n    \"password\": \"password\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Ssns",
							"host": [
								"{{url}}"
							],
							"path": [
								"Ssns"
							],
							"query": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "NEW get myself",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "39a6bea9-b3b1-4059-b06e-c83087f7a87b",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"",
									"pm.test(\"Grabbed uno people\", () => pm.expect(pm.response.json().length).to.eql(1));"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/Prss?email=adm",
							"host": [
								"{{url}}"
							],
							"path": [
								"Prss"
							],
							"query": [
								{
									"key": "email",
									"value": "adm"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Admin GET multiple prss",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d5f62498-990e-4dbf-93d3-a0f98d15ba20",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"",
									"pm.test(\"Grabbed both created users\", () => pm.expect(pm.response.json().length).to.eql(6));",
									"pm.test(\"Has expected fields\", () => pm.expect(pm.response.json()[0].email).not.eql(undefined));",
									"pm.test(\"Has expected fields\", () => pm.expect(pm.response.json()[0].id).not.eql(undefined));",
									"pm.test(\"Has expected fields\", () => pm.expect(pm.response.json()[1].email).not.eql(undefined));",
									"pm.test(\"Has expected fields\", () => pm.expect(pm.response.json()[1].id).not.eql(undefined));",
									"pm.test(\"Has expected fields\", () => pm.expect(pm.response.json()[2].email).not.eql(undefined));",
									"pm.test(\"Has expected fields\", () => pm.expect(pm.response.json()[2].id).not.eql(undefined));"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/Prss",
							"host": [
								"{{url}}"
							],
							"path": [
								"Prss"
							]
						}
					},
					"response": []
				},
				{
					"name": "Admin GET another Prs",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1a35d909-28af-4b85-a543-6250786f2be5",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"",
									"pm.test(\"Grabbed specified user only\", () => pm.expect(pm.response.json()[0].email).is.eql(\"UserA@domainA\"));",
									"pm.test(\"id check\", () => pm.expect(pm.response.json()[0].id).is.eql(2));",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/Prss?email=UserA@domainA",
							"host": [
								"{{url}}"
							],
							"path": [
								"Prss"
							],
							"query": [
								{
									"key": "email",
									"value": "UserA@domainA"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Admin GET email prefix",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "efc45fd6-8bf0-482d-b676-0ed252506320",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"",
									"pm.test(\"Grabbed specified two users\", () => pm.expect(pm.response.json()[0].email).is.eql(\"UserK@domainA\"));",
									"pm.test(\"Grabbed specified two users\", () => pm.expect(pm.response.json()[1].email).is.eql(\"UserK@domainK\"));",
									"pm.test(\"id check\", () => pm.expect(pm.response.json()[0].id).is.eql(3));",
									"pm.test(\"id check\", () => pm.expect(pm.response.json()[1].id).is.eql(4));",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/Prss?email=UserK",
							"host": [
								"{{url}}"
							],
							"path": [
								"Prss"
							],
							"query": [
								{
									"key": "email",
									"value": "UserK"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Admin GET Prs NoName",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2ceb249c-3ed7-46df-9dc4-d13cdd2c6430",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"",
									"pm.test(\"id Check\", () => pm.expect(pm.response.json()[0].id).is.eql(6));",
									"pm.test(\"firstName check\", () => pm.expect(pm.response.json()[0].firstName).is.eql(null));",
									"pm.test(\"lastName check\", () => pm.expect(pm.response.json()[0].lastName).is.eql(\"LastB\"));",
									"pm.test(\"email check\", () => pm.expect(pm.response.json()[0].email).is.eql(\"noName@DomainB\"));",
									"pm.test(\"role check\", () => pm.expect(pm.response.json()[0].role).is.eql(0));",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/Prss/{{noFirstName}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"Prss",
								"{{noFirstName}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Admin GET another Prs/prsId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "39f0d2ae-e035-4be7-87a3-b4f38f37749a",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"",
									"pm.test(\"Grabbed specified user\", () => pm.expect(pm.response.json()[0].email).to.eql(\"UserA@domainA\"));",
									"pm.test(\"Check less Password\", () => pm.expect(pm.response.json()[0].password).to.eql(undefined));",
									"pm.test(\"Check whenRegistered\", () => pm.expect(pm.response.json()[0].whenRegistered).not.eql(undefined));",
									"pm.test(\"Check termsAccepted\", () => pm.expect(pm.response.json()[0].termsAccepted).not.eql(undefined));",
									"pm.test(\"id Check\", () => pm.expect(pm.response.json()[0].id).is.eql(2));",
									"pm.test(\"firstName check\", () => pm.expect(pm.response.json()[0].firstName).is.eql(\"FirstA\"));",
									"pm.test(\"lastName check\", () => pm.expect(pm.response.json()[0].lastName).is.eql(\"LastA\"));",
									"pm.test(\"role check\", () => pm.expect(pm.response.json()[0].role).is.eql(0));"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/Prss/2",
							"host": [
								"{{url}}"
							],
							"path": [
								"Prss",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Admin Check SQL injection",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6f758f66-0397-4928-9b59-fafcf47384b2",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"",
									"pm.test(\"Injection did not work\", () => pm.expect(pm.response.json()[0].email).to.eql(\"UserA@domainA;\\\" DROP TABLE *\"));",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/Prss/{{injection}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"Prss",
								"{{injection}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register without terms accepted",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6cbfb2de-42f4-44a0-a3f3-14996eb37830",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"pm.test(\"Body is correct\", () => pm.response.to.have.body(''));",
									"",
									"let locURL;",
									"locURL = pm.response.headers.get(\"Location\");",
									"locURL = locURL && locURL.split('/');",
									"pm.collectionVariables.set(\"noTerms\", locURL[locURL.length-1]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"UserNoTerms@domainA\",\n    \"firstName\": \"FirstA\",\n    \"lastName\" : \"LastA\",\n    \"password\" : \"passwordA\",\n    \"role\"     : 0,\n    \"termsAccepted\": false\n}"
						},
						"url": {
							"raw": "{{url}}/Prss",
							"host": [
								"{{url}}"
							],
							"path": [
								"Prss"
							]
						},
						"description": "\n"
					},
					"response": []
				},
				{
					"name": "Admin GET no terms user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9bdd1f9f-239d-4a4e-8382-1606d1e9d37f",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"",
									"pm.test(\"Grabbed specified user\", () => pm.expect(pm.response.json()[0].email).to.eql(\"UserNoTerms@domainA\"));",
									"pm.test(\"Check less Password\", () => pm.expect(pm.response.json()[0].password).to.eql(undefined));",
									"pm.test(\"Check whenRegistered\", () => pm.expect(pm.response.json()[0].whenRegistered).not.eql(undefined));",
									"pm.test(\"Check termsAccepted\", () => pm.expect(pm.response.json()[0].termsAccepted).is.eql(null));",
									"pm.test(\"id Check\", () => pm.expect(pm.response.json()[0].id).is.eql(7));",
									"pm.test(\"firstName check\", () => pm.expect(pm.response.json()[0].firstName).is.eql(\"FirstA\"));",
									"pm.test(\"lastName check\", () => pm.expect(pm.response.json()[0].lastName).is.eql(\"LastA\"));",
									"pm.test(\"role check\", () => pm.expect(pm.response.json()[0].role).is.eql(0));"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/Prss/{{noTerms}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"Prss",
								"{{noTerms}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register An Admin Success",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "053f9fa1-8716-4d4d-afa2-8264614b77d9",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"UserB@domainB\",\n    \"firstName\": \"FirstB\",\n    \"lastName\" : \"LastB\",\n    \"password\" : \"passwordB\",\n    \"role\"     : 1,\n    \"termsAccepted\": true\n}"
						},
						"url": {
							"raw": "{{url}}/Prss",
							"host": [
								"{{url}}"
							],
							"path": [
								"Prss"
							]
						},
						"description": "Should pass now that we are logged into admin"
					},
					"response": []
				},
				{
					"name": "Register empty password",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "36b41985-37a0-4d99-85da-e5f8deec59b9",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"UserC@domainB\",\n    \"firstName\": \"FirstB\",\n    \"lastName\" : \"LastB\",\n    \"password\" : \"\",\n    \"role\"     : 0,\n    \"termsAccepted\": true\n}"
						},
						"url": {
							"raw": "{{url}}/Prss",
							"host": [
								"{{url}}"
							],
							"path": [
								"Prss"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register Terms falsey Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6792a299-f283-4a3f-9238-4cb17c24a991",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"Noterms@notatakendomain\",\n    \"firstName\": \"FirstA\",\n    \"lastName\" : \"LastA\",\n    \"password\" : \"passwordA\",\n    \"role\"     : 0,\n    \"termsAccepted\": null\n}"
						},
						"url": {
							"raw": "{{url}}/Prss",
							"host": [
								"{{url}}"
							],
							"path": [
								"Prss"
							]
						},
						"description": "\n"
					},
					"response": []
				},
				{
					"name": "Register Terms falsey Admin 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8874a79b-ff2d-49a4-ae4b-2b143f437226",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"Noterms2@notatakendomain\",\n    \"firstName\": \"FirstA\",\n    \"lastName\" : \"LastA\",\n    \"password\" : \"passwordA\",\n    \"role\"     : 0,\n    \"termsAccepted\": 0\n}"
						},
						"url": {
							"raw": "{{url}}/Prss",
							"host": [
								"{{url}}"
							],
							"path": [
								"Prss"
							]
						},
						"description": "\n"
					},
					"response": []
				},
				{
					"name": "Register Terms falsey Admin 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c0bb7f99-3e0a-47cc-a9b4-ade960cc89d2",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"Noterms3@notatakendomain\",\n    \"firstName\": \"FirstA\",\n    \"lastName\" : \"LastA\",\n    \"password\" : \"passwordA\",\n    \"role\"     : 0,\n    \"termsAccepted\": \"\"\n}"
						},
						"url": {
							"raw": "{{url}}/Prss",
							"host": [
								"{{url}}"
							],
							"path": [
								"Prss"
							]
						},
						"description": "\n"
					},
					"response": []
				},
				{
					"name": "Update Person termsAccepted admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "893424ec-50d8-46a3-8f09-e5ecdcec35c7",
								"exec": [
									"pm.test(\"Status 400\", () => pm.response.to.have.status(400));",
									"",
									"pm.test(\"forbiddenField tag is present\", () => pm.expect(pm.response.text()).to.include(\"forbiddenField\"));",
									"pm.test(\"forbiddenField is termsAccepted\", () => pm.expect(pm.response.json()[0].params[0]).to.eql(\"termsAccepted\"));",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"termsAccepted\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Prss/2",
							"host": [
								"{{url}}"
							],
							"path": [
								"Prss",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Person whenRegistered admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "747ec3d5-4159-42f1-a312-3e59a0068253",
								"exec": [
									"pm.test(\"Status 400\", () => pm.response.to.have.status(400));",
									"",
									"pm.test(\"forbiddenField tag is present\", () => pm.expect(pm.response.text()).to.include(\"forbiddenField\"));",
									"pm.test(\"forbiddenField is whenRegistered\", () => pm.expect(pm.response.json()[0].params[0]).to.eql(\"whenRegistered\"));",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"whenRegistered\": 0\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Prss/2",
							"host": [
								"{{url}}"
							],
							"path": [
								"Prss",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Person role",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f1e56ccf-5188-40b6-a69f-bf7579069396",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"role\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Prss/{{diffDomain}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"Prss",
								"{{diffDomain}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Person role decimal",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8422e1f0-145a-42f9-9077-fe77b8e8efe0",
								"exec": [
									"pm.test(\"Status 400\", () => pm.response.to.have.status(400));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"role\": 1.1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Prss/{{diffDomain}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"Prss",
								"{{diffDomain}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Person role decimal 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a0a5f220-48a8-4b32-ba92-e0e4d5b62a92",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"role\": 1.000000000000000000000000000000000000000000001\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Prss/{{diffDomain}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"Prss",
								"{{diffDomain}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Person weird input",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b454e686-2c5d-4e16-8de2-6bea68e7ebc4",
								"exec": [
									"pm.test(\"Status 400\", () => pm.response.to.have.status(400));",
									"",
									"pm.test(\"badValue tag is present\", () => pm.expect(pm.response.text()).to.include(\"badValue\"));",
									"pm.test(\"params is role\", () => pm.expect(pm.response.json()[0].params[0]).to.eql(\"role\"));",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"role\": 0.5\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Prss/3",
							"host": [
								"{{url}}"
							],
							"path": [
								"Prss",
								"3"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Person weird input 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d9836c2c-fc74-4763-9cd1-d4f7215dc165",
								"exec": [
									"pm.test(\"Status 400\", () => pm.response.to.have.status(400));",
									"",
									"pm.test(\"badValue tag is present\", () => pm.expect(pm.response.text()).to.include(\"badValue\"));",
									"pm.test(\"params is role\", () => pm.expect(pm.response.json()[0].params[0]).to.eql(\"role\"));",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"role\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Prss/3",
							"host": [
								"{{url}}"
							],
							"path": [
								"Prss",
								"3"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Different Person",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "105e637e-4ca8-40e4-9836-94d43450aaae",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"firstName\": \"Not what it used to be\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Prss/3",
							"host": [
								"{{url}}"
							],
							"path": [
								"Prss",
								"3"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update password",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6408a9b3-7953-436d-a44d-85f8b94ab62c",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"password\": \"haha\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Prss/3",
							"host": [
								"{{url}}"
							],
							"path": [
								"Prss",
								"3"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update password admin null",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3e9704bf-8d04-4aac-ba80-8ac8c39522bb",
								"exec": [
									"pm.test(\"Status 400\", () => pm.response.to.have.status(400));",
									"",
									"pm.test(\"badValue tag is present\", () => pm.expect(pm.response.text()).to.include(\"badValue\"));",
									"pm.test(\"badValue is password\", () => pm.expect(pm.response.json()[0].params[0]).to.eql(\"password\"));",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"password\": null\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Prss/3",
							"host": [
								"{{url}}"
							],
							"path": [
								"Prss",
								"3"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update password admin empty",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "235d777b-1cf3-4dbe-8d81-a758aee4fbc4",
								"exec": [
									"pm.test(\"Status 400\", () => pm.response.to.have.status(400));",
									"",
									"pm.test(\"badValue tag is present\", () => pm.expect(pm.response.text()).to.include(\"badValue\"));",
									"pm.test(\"badValue is password\", () => pm.expect(pm.response.json()[0].params[0]).to.eql(\"password\"));",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"password\": \"\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Prss/3",
							"host": [
								"{{url}}"
							],
							"path": [
								"Prss",
								"3"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update password bad password admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "00e81e7e-f885-4905-a85d-c76b7d6358e2",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"oldPassword\": \"nope not even close\",\n\t\"password\": \"different\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Prss/{{diffDomain}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"Prss",
								"{{diffDomain}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update password to * Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b4ec2fd5-06c0-47f9-b65c-691c72cab8e8",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"password\": \"*\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Prss/{{diffDomain}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"Prss",
								"{{diffDomain}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update extra forbidden fields",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d9a87493-6c4b-4f69-b289-c5617a390c6b",
								"exec": [
									"pm.test(\"Status 400\", () => pm.response.to.have.status(400));",
									"",
									"pm.test(\"forbiddenField tag is present\", () => pm.expect(pm.response.text()).to.include(\"forbiddenField\"));",
									"pm.test(\"forbiddenField is extra\", () => pm.expect(pm.response.json()[0].params[0]).to.eql(\"extra\"));",
									"pm.test(\"forbiddenField is extra2\", () => pm.expect(pm.response.json()[1].params[0]).to.eql(\"extra2\"));",
									"pm.test(\"forbiddenField is extra3\", () => pm.expect(pm.response.json()[2].params[0]).to.eql(\"extra3\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"firstName\": \"Fixed name\",\n\t\"lastName\": \"lastJson\",\n\t\"password\": \"hahaChangedIt\",\n\t\"extra\": \"extra\",\n\t\"extra2\": \"extra\",\n\t\"extra3\": \"extra\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Prss/{{diffDomain}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"Prss",
								"{{diffDomain}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout another session",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5030c22d-2127-4163-aff3-c0eee637531c",
								"exec": [
									"pm.test(\"Status 400\", () => pm.response.to.have.status(400));",
									"",
									"pm.test(\"notFound tag is present\", () => pm.expect(pm.response.text()).to.include(\"notFound\"));",
									"pm.test(\"notFound is null\", () => pm.expect(pm.response.json()[0].params).to.eql(null));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/Ssns/15",
							"host": [
								"{{url}}"
							],
							"path": [
								"Ssns",
								"15"
							]
						},
						"description": "\n"
					},
					"response": []
				},
				{
					"name": "Logout Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2ee44e19-30e7-45f4-9a0f-f59fabfd4423",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"pm.test(\"No body\", () => !pm.response.to.have.body);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/Ssns/{{curLogin}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"Ssns",
								"{{curLogin}}"
							]
						},
						"description": "\n"
					},
					"response": []
				},
				{
					"name": "Login student k",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f06323e1-d938-43db-8dd7-55e2de46133b",
								"exec": [
									"loginCheck(pm);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"UserK@domainA\",\n    \"password\": \"haha\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Ssns",
							"host": [
								"{{url}}"
							],
							"path": [
								"Ssns"
							],
							"query": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "NEW get myself Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4de8eb75-1f49-4f47-8deb-ed2bfd4b6840",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"",
									"pm.test(\"Grabbed uno people\", () => pm.expect(pm.response.json().length).to.eql(1));"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/Prss?email=UserK@domainA",
							"host": [
								"{{url}}"
							],
							"path": [
								"Prss"
							],
							"query": [
								{
									"key": "email",
									"value": "UserK@domainA"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Admin GET email prefix Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bbcff2cf-7e1b-483a-a9af-fc8fb79e6a5b",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"",
									"pm.test(\"Grabbed myslef only\", () => pm.expect(pm.response.json().length).is.eql(1));",
									"pm.test(\"email correct\", () => pm.expect(pm.response.json()[0].email).is.eql(\"UserK@domainA\"));",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/Prss?email=UserK",
							"host": [
								"{{url}}"
							],
							"path": [
								"Prss"
							],
							"query": [
								{
									"key": "email",
									"value": "UserK"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout student k",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b3380e21-b6a7-4127-b27a-e1b838bc49ad",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"pm.test(\"No body\", () => !pm.response.to.have.body);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/Ssns/{{curLogin}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"Ssns",
								"{{curLogin}}"
							]
						},
						"description": "\n"
					},
					"response": []
				},
				{
					"name": "Login locked account",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3b23b362-be67-4776-8a3f-41fff28e78b0",
								"exec": [
									"loginCheck(pm);",
									"let loc = pm.response.headers.get(\"Location\").split('/')[2];",
									"pm.test(\"location is two\", () => pm.expect(loc).to.eql('2'));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"UserK@domainK\",\n    \"password\": \"*\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Ssns",
							"host": [
								"{{url}}"
							],
							"path": [
								"Ssns"
							],
							"query": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Test admin priviledges",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "521f6f4e-6944-4401-a15b-523a0c69c963",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"role\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Prss/{{usrK}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"Prss",
								"{{usrK}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login Student A bad pass",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9db5c5be-07d4-4c38-95a3-f099e4393736",
								"exec": [
									"pm.test(\"Status 400\", () => pm.response.to.have.status(400));",
									"",
									"pm.test(\"badLogin tag\", () => pm.expect(pm.response.text()).to.include(\"badLogin\"));",
									"pm.test(\"params is null\", () => pm.expect(pm.response.json()[0].params).is.eql(null));",
									"pm.test(\"nothing else present\", () => pm.expect(pm.response.json().length).is.eql(1));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"UserA@domainA\",\n    \"password\" : \"passwordB\"\n}"
						},
						"url": {
							"raw": "{{url}}/Ssns",
							"host": [
								"{{url}}"
							],
							"path": [
								"Ssns"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login Student A try to get more info",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ff53ccff-3344-4f15-bf1c-e94ed20e9450",
								"exec": [
									"pm.test(\"Status 400\", () => pm.response.to.have.status(400));",
									"",
									"pm.test(\"badLogin tag\", () => pm.expect(pm.response.text()).to.include(\"badLogin\"));",
									"pm.test(\"params is null\", () => pm.expect(pm.response.json()[0].params).is.eql(null));",
									"pm.test(\"nothing else present\", () => pm.expect(pm.response.json().length).is.eql(1));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"UserA@domainA\",\n    \"password\" : \"passwordB\",\n    \"extra\": \"extra info?\"\n}"
						},
						"url": {
							"raw": "{{url}}/Ssns",
							"host": [
								"{{url}}"
							],
							"path": [
								"Ssns"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login Student A",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "27eaeaa8-ab05-4fbf-b8d3-77b294e1f2aa",
								"exec": [
									"loginCheck(pm);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"UserA@domainA\",\n    \"password\" : \"passwordA\"\n}"
						},
						"url": {
							"raw": "{{url}}/Ssns",
							"host": [
								"{{url}}"
							],
							"path": [
								"Ssns"
							]
						}
					},
					"response": []
				},
				{
					"name": "NEW get myself",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9124bcba-8c09-4f01-bca3-db70ac7b716f",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"",
									"pm.test(\"Grabbed uno people\", () => pm.expect(pm.response.json().length).to.eql(1));"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/Prss?email=UserA@domainA",
							"host": [
								"{{url}}"
							],
							"path": [
								"Prss"
							],
							"query": [
								{
									"key": "email",
									"value": "UserA@domainA"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Nuke fail",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ad877b73-f094-42e0-86de-2e121e7ede3c",
								"exec": [
									"pm.test(\"Status 403\", () => pm.response.to.have.status(403));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/DB",
							"host": [
								"{{url}}"
							],
							"path": [
								"DB"
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout another session",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cc006bbc-ec70-4c56-999d-801a11a8371d",
								"exec": [
									"pm.test(\"Status 403\", () => pm.response.to.have.status(403));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/Ssns/2",
							"host": [
								"{{url}}"
							],
							"path": [
								"Ssns",
								"2"
							]
						},
						"description": "\n"
					},
					"response": []
				},
				{
					"name": "Get Ssns/ fail",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "adbbf0d8-40fe-4454-a6e2-0c0409bc5fde",
								"exec": [
									"pm.test(\"Status 403\", () => pm.response.to.have.status(403));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/Ssns",
							"host": [
								"{{url}}"
							],
							"path": [
								"Ssns"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Ssns/{{id}} success student",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ca668ca2-e70f-479b-99ae-17627d845db5",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"",
									"pm.test(\"Returns id\", () => pm.expect(pm.response.json().id).is.eql(3));",
									"pm.test(\"Returns prsId\", () => pm.expect(pm.response.json().prsId).is.eql(2));",
									"pm.test(\"Returns loginTime\", () => pm.expect(pm.response.json().loginTime).not.eql(undefined));",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/Ssns/3",
							"host": [
								"{{url}}"
							],
							"path": [
								"Ssns",
								"3"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Ssns/{{id}} Other student",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "33325554-f8c7-4414-a173-6077dd987256",
								"exec": [
									"pm.test(\"Status 400\", () => pm.response.to.have.status(400));",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/Ssns/4",
							"host": [
								"{{url}}"
							],
							"path": [
								"Ssns",
								"4"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Ssns/{{id}} doesn't exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8149e66c-215f-4a30-a157-ee7da5be0202",
								"exec": [
									"pm.test(\"Status 400\", () => pm.response.to.have.status(400));",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/Ssns/2843",
							"host": [
								"{{url}}"
							],
							"path": [
								"Ssns",
								"2843"
							]
						}
					},
					"response": []
				},
				{
					"name": "Student get list",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1830c045-867f-405e-8944-f561a302a42b",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"",
									"pm.test(\"Grabbed only one user\", () => pm.expect(pm.response.json().length).to.eql(1));",
									"pm.test(\"User is myself\", () => pm.expect(pm.response.json()[0].email).to.eql(\"UserA@domainA\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/Prss",
							"host": [
								"{{url}}"
							],
							"path": [
								"Prss"
							]
						}
					},
					"response": []
				},
				{
					"name": "Student get myself",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "67287e6d-5339-4944-96b7-ffb2aa2872f1",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"",
									"pm.test(\"Grabbed only one user\", () => pm.expect(pm.response.json().length).to.eql(1));",
									"pm.test(\"User is myself\", () => pm.expect(pm.response.json()[0].email).to.eql(\"UserA@domainA\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"UserA@domainA.com\"\n}"
						},
						"url": {
							"raw": "{{url}}/Prss/",
							"host": [
								"{{url}}"
							],
							"path": [
								"Prss",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Student get other email",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "46f7eac8-7848-40f6-8829-bdeb3923f9f7",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"",
									"pm.test(\"Grabbed nothing\", () => pm.expect(pm.response.json().length).to.eql(0));",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/Prss/?email=adm@11.com",
							"host": [
								"{{url}}"
							],
							"path": [
								"Prss",
								""
							],
							"query": [
								{
									"key": "email",
									"value": "adm@11.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Student GET another Prs/prsId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e6cafff1-613b-4877-948c-fe1c260c2f3e",
								"exec": [
									"pm.test(\"Status 403\", () => pm.response.to.have.status(403));"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/Prss/1",
							"host": [
								"{{url}}"
							],
							"path": [
								"Prss",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Student GET myself Prs/prsId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3bbaace8-93da-425a-a725-d535130cd409",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/Prss/2",
							"host": [
								"{{url}}"
							],
							"path": [
								"Prss",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Person Name",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a07ece44-9763-4f5f-8b30-0776c85ba70c",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"firstName\": \"Johnny\",\n\t\"lastName\": \"AppleSeed\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Prss/2",
							"host": [
								"{{url}}"
							],
							"path": [
								"Prss",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Person Empty",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2d4757d0-7b84-4763-9526-ca0f934116a8",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Prss/2",
							"host": [
								"{{url}}"
							],
							"path": [
								"Prss",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Person Password",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "13bc4756-7f24-48dd-b76c-dccb040e7593",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"password\": \"newpassworda\",\n\t\"oldPassword\": \"passwordA\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Prss/2",
							"host": [
								"{{url}}"
							],
							"path": [
								"Prss",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Person Password empty",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5c3927bb-fe43-4505-8247-0b8b81fb246e",
								"exec": [
									"pm.test(\"Status 400\", () => pm.response.to.have.status(400));",
									"",
									"pm.test(\"badValue tag is present\", () => pm.expect(pm.response.text()).to.include(\"badValue\"));",
									"pm.test(\"badValue is password\", () => pm.expect(pm.response.json()[0].params[0]).to.eql(\"password\"));",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"password\": \"\",\n\t\"oldPassword\": \"newpassworda\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Prss/2",
							"host": [
								"{{url}}"
							],
							"path": [
								"Prss",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Person Password null",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fa4bad94-c43e-4092-ad66-58259d484e4d",
								"exec": [
									"pm.test(\"Status 400\", () => pm.response.to.have.status(400));",
									"",
									"pm.test(\"badValue tag is present\", () => pm.expect(pm.response.text()).to.include(\"badValue\"));",
									"pm.test(\"badValue is password\", () => pm.expect(pm.response.json()[0].params[0]).to.eql(\"password\"));",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"password\": null,\n\t\"oldPassword\": \"newpassworda\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Prss/2",
							"host": [
								"{{url}}"
							],
							"path": [
								"Prss",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Person Password No oldPassword",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2c893b05-2828-48d1-a454-e35e0fd1172f",
								"exec": [
									"pm.test(\"Status 400\", () => pm.response.to.have.status(400));",
									"",
									"pm.test(\"noOldPwd tag is present\", () => pm.expect(pm.response.text()).to.include(\"noOldPwd\"));",
									"pm.test(\"params is null\", () => pm.expect(pm.response.json()[0].params).is.eql(null));",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"password\": \"newpassworda\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Prss/2",
							"host": [
								"{{url}}"
							],
							"path": [
								"Prss",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Person Password oldPassword wrong",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "03d601eb-60e0-42c3-aa46-03c1934500f7",
								"exec": [
									"pm.test(\"Status 400\", () => pm.response.to.have.status(400));",
									"",
									"pm.test(\"oldPwdMismatch tag is present\", () => pm.expect(pm.response.text()).to.include(\"oldPwdMismatch\"));",
									"pm.test(\"params is null\", () => pm.expect(pm.response.json()[0].params).is.eql(null));",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"password\": \"newpassworda\",\n\t\"oldPassword\": \"passwordA\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Prss/2",
							"host": [
								"{{url}}"
							],
							"path": [
								"Prss",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Person Role Fail",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "86a1314b-67af-46f6-95e5-4516adc29d50",
								"exec": [
									"pm.test(\"Status 400\", () => pm.response.to.have.status(400));",
									"",
									"pm.test(\"badValue tag is present\", () => pm.expect(pm.response.text()).to.include(\"badValue\"));",
									"pm.test(\"badValue is role\", () => pm.expect(pm.response.json()[0].params[0]).to.eql(\"role\"));",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"role\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Prss/2",
							"host": [
								"{{url}}"
							],
							"path": [
								"Prss",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Person termsAccepted fail",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4fb8d0c5-d3ee-4715-a80a-147697c723de",
								"exec": [
									"pm.test(\"Status 400\", () => pm.response.to.have.status(400));",
									"",
									"pm.test(\"forbiddenField tag is present\", () => pm.expect(pm.response.text()).to.include(\"forbiddenField\"));",
									"pm.test(\"forbiddenField is termsAccepted\", () => pm.expect(pm.response.json()[0].params[0]).to.eql(\"termsAccepted\"));",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"termsAccepted\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Prss/2",
							"host": [
								"{{url}}"
							],
							"path": [
								"Prss",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Person whenRegistered fail",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "92c2b054-98e8-477a-a71d-532df405bf6c",
								"exec": [
									"pm.test(\"Status 400\", () => pm.response.to.have.status(400));",
									"",
									"pm.test(\"forbiddenField tag is present\", () => pm.expect(pm.response.text()).to.include(\"forbiddenField\"));",
									"pm.test(\"forbiddenField is whenRegistered\", () => pm.expect(pm.response.json()[0].params[0]).to.eql(\"whenRegistered\"));",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"whenRegistered\": 0\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Prss/2",
							"host": [
								"{{url}}"
							],
							"path": [
								"Prss",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Other Person Fail",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b4c8af11-1e1d-4d96-9a48-0b4f71d18eb7",
								"exec": [
									"pm.test(\"Status 403\", () => pm.response.to.have.status(403));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"firstName\": \"Not my admin\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Prss/1",
							"host": [
								"{{url}}"
							],
							"path": [
								"Prss",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove Student A",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cf285d28-9c3a-4b1d-9532-1b20188072da",
								"exec": [
									"pm.test(\"Status 403\", () => pm.response.to.have.status(403));",
									"pm.test(\"No body\", () => !pm.response.to.have.body);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/Prss/2",
							"host": [
								"{{url}}"
							],
							"path": [
								"Prss",
								"2"
							]
						},
						"description": "\n"
					},
					"response": []
				},
				{
					"name": "Get Ssns fail",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "44fddc9e-0e18-4aec-a524-d3c832ee5a39",
								"exec": [
									"pm.test(\"Status 403\", () => pm.response.to.have.status(403));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/Ssns",
							"host": [
								"{{url}}"
							],
							"path": [
								"Ssns"
							]
						}
					},
					"response": []
				},
				{
					"name": "NT Admin login Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "df2b7250-62ab-4e06-a515-4382fb6a6d28",
								"exec": [
									"loginCheck(pm);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"adm@11.com\",\n    \"password\": \"password\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Ssns",
							"host": [
								"{{url}}"
							],
							"path": [
								"Ssns"
							],
							"query": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Check New StudentA Name",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "49c39057-24b6-4140-9c26-a43d7b9ed95e",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"",
									"pm.test(\"Correct Name\", () => pm.expect(pm.response.json()[0].firstName).to.eql(\"Johnny\"));",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/Prss/2",
							"host": [
								"{{url}}"
							],
							"path": [
								"Prss",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Ssns success",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "949741a3-c8e8-41a3-ae25-dc623d767752",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"",
									"pm.test(\"Returns both active sessions\", () => pm.expect(pm.response.json().length).to.eql(3));",
									"pm.test(\"Returns id\", () => pm.expect(pm.response.json()[0].id).not.eql(undefined));",
									"pm.test(\"Returns prsId\", () => pm.expect(pm.response.json()[0].prsId).not.eql(undefined));",
									"pm.test(\"Returns loginTime\", () => pm.expect(pm.response.json()[0].loginTime).not.eql(undefined));",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/Ssns",
							"host": [
								"{{url}}"
							],
							"path": [
								"Ssns"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Ssns/{{id}} success",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e4bffc80-da0e-415b-a7a7-f005ea077d68",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"",
									"pm.test(\"Returns id\", () => pm.expect(pm.response.json().id).is.eql(3));",
									"pm.test(\"Returns prsId\", () => pm.expect(pm.response.json().prsId).is.eql(2));",
									"pm.test(\"Returns loginTime\", () => pm.expect(pm.response.json().loginTime).not.eql(undefined));",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/Ssns/3",
							"host": [
								"{{url}}"
							],
							"path": [
								"Ssns",
								"3"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Other Ssns/{{id}}  success",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8ac592d2-a1db-43ae-87ae-213a00944600",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"",
									"pm.test(\"Returns id\", () => pm.expect(pm.response.json().id).is.eql(4));",
									"pm.test(\"Returns prsId\", () => pm.expect(pm.response.json().prsId).is.eql(1));",
									"pm.test(\"Returns loginTime\", () => pm.expect(pm.response.json().loginTime).not.eql(undefined));",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/Ssns/4",
							"host": [
								"{{url}}"
							],
							"path": [
								"Ssns",
								"4"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Ssns/{{id}} that doesn't exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "343d766e-7cf2-4e42-9cab-9d5762338757",
								"exec": [
									"pm.test(\"Status 400\", () => pm.response.to.have.status(400));",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/Ssns/1294",
							"host": [
								"{{url}}"
							],
							"path": [
								"Ssns",
								"1294"
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove Student A",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "36b667f8-8d41-4b3a-82a9-785346876251",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"pm.test(\"No body\", () => !pm.response.to.have.body);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/Prss/2",
							"host": [
								"{{url}}"
							],
							"path": [
								"Prss",
								"2"
							]
						},
						"description": "\n"
					},
					"response": []
				},
				{
					"name": "Check Student A Dropped",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e30dcc55-0bd1-4107-8ef7-ee74773d999b",
								"exec": [
									"pm.test(\"Status 400\", () => pm.response.to.have.status(400));",
									"",
									"pm.test(\"notFound present\", () => pm.expect(pm.response.text()).to.include(\"notFound\"));",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/Prss/2",
							"host": [
								"{{url}}"
							],
							"path": [
								"Prss",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Bad Login request",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "83670aee-6810-4254-8622-c03f809905da",
								"exec": [
									"",
									"pm.test(\"Status 400\", () => pm.response.to.have.status(400));",
									"",
									"pm.test(\"badLogin present\", () => pm.expect(pm.response.text()).to.include(\"badLogin\"));",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"doesnotexist@domainA\", \"password\": \"badpass\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Ssns",
							"host": [
								"{{url}}"
							],
							"path": [
								"Ssns"
							]
						}
					},
					"response": []
				},
				{
					"name": "Clean slate",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d3998dda-6e3e-486e-a7be-01f9844f6b8c",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"pm.test(\"No body\", () => !pm.response.to.have.body);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/DB",
							"host": [
								"{{url}}"
							],
							"path": [
								"DB"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "3 Cnvs/Msgs",
			"item": [
				{
					"name": "POST new cnv no login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ee10f64c-95e9-487e-bb8c-1a29ecacd055",
								"exec": [
									"pm.test(\"Status 401\", () => pm.response.to.have.status(401));",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{url}}/Cnvs",
							"host": [
								"{{url}}"
							],
							"path": [
								"Cnvs"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET cnv no login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "614be522-554f-4629-a7c4-5bf448e494d8",
								"exec": [
									"pm.test(\"Status 401\", () => pm.response.to.have.status(401));",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/Cnvs/?owner=UserA",
							"host": [
								"{{url}}"
							],
							"path": [
								"Cnvs",
								""
							],
							"query": [
								{
									"key": "owner",
									"value": "UserA"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET cnvs/{cnvId} no login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f8a81af1-87a4-4151-8bc8-ece776970bf3",
								"exec": [
									"pm.test(\"Status 401\", () => pm.response.to.have.status(401));",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/Cnvs/0",
							"host": [
								"{{url}}"
							],
							"path": [
								"Cnvs",
								"0"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT cnvs/{cnvId} no login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f03f1f15-272b-45a7-9603-b733eb466fd6",
								"exec": [
									"pm.test(\"Status 401\", () => pm.response.to.have.status(401));",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\": \"I wasn't logged in and did this\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Cnvs/0",
							"host": [
								"{{url}}"
							],
							"path": [
								"Cnvs",
								"0"
							]
						}
					},
					"response": []
				},
				{
					"name": "DEL cnvs/{cnvId} no login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c75c1ad9-1a9b-4851-b5b1-6ba1673767e6",
								"exec": [
									"pm.test(\"Status 401\", () => pm.response.to.have.status(401));",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/Cnvs/0",
							"host": [
								"{{url}}"
							],
							"path": [
								"Cnvs",
								"0"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET cnvs/{cnvId}/Msgs no login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "66103361-d398-4665-878c-6528bfe39ad8",
								"exec": [
									"pm.test(\"Status 401\", () => pm.response.to.have.status(401));",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/Cnvs/0/Msgs/?dateTime=159034",
							"host": [
								"{{url}}"
							],
							"path": [
								"Cnvs",
								"0",
								"Msgs",
								""
							],
							"query": [
								{
									"key": "dateTime",
									"value": "159034"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "POST cnvs/{cnvId}/Msgs no login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0d901562-7d65-4c3e-acab-48d5091ec61d",
								"exec": [
									"pm.test(\"Status 401\", () => pm.response.to.have.status(401));",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"content\": \"I was not logged in and still posted this\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Cnvs/0/Msgs",
							"host": [
								"{{url}}"
							],
							"path": [
								"Cnvs",
								"0",
								"Msgs"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Msgs/{msgId} no login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d50c2708-5457-4954-b54a-71f30dce4c8f",
								"exec": [
									"pm.test(\"Status 401\", () => pm.response.to.have.status(401));"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Msgs/{{AdminCnvsMsg1}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"Msgs",
								"{{AdminCnvsMsg1}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register Student A",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6da02122-8cc5-43eb-b06f-0f33c2d15575",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"",
									"let locURL",
									"locURL = pm.response.headers.get(\"Location\");",
									"locURL = locURL && locURL.split('/');",
									"",
									"pm.collectionVariables.set(\"usrA\", locURL[2]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"UserA@domainA\",\n    \"firstName\": \"FirstA\",\n    \"lastName\" : \"LastA\",\n    \"password\" : \"passwordA\",\n    \"role\"     : 0,\n    \"termsAccepted\": true\n}"
						},
						"url": {
							"raw": "{{url}}/Prss",
							"host": [
								"{{url}}"
							],
							"path": [
								"Prss"
							]
						},
						"description": "\n"
					},
					"response": []
				},
				{
					"name": "Register Student B",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7e69c26d-d8d6-469b-863c-49c0d3736e4e",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"",
									"let locURL",
									"locURL = pm.response.headers.get(\"Location\");",
									"locURL = locURL && locURL.split('/');",
									"",
									"pm.collectionVariables.set(\"usrB\", locURL[2]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"UserB@domainB\",\n    \"firstName\": \"FirstB\",\n    \"lastName\" : \"LastB\",\n    \"password\" : \"passwordB\",\n    \"role\"     : 0,\n    \"termsAccepted\": true\n}"
						},
						"url": {
							"raw": "{{url}}/Prss",
							"host": [
								"{{url}}"
							],
							"path": [
								"Prss"
							]
						},
						"description": "\n"
					},
					"response": []
				},
				{
					"name": "Register Student B other errors",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "24088921-b83a-4d3f-9b3f-aaf7006c7c76",
								"exec": [
									"pm.test(\"Status 400\", () => pm.response.to.have.status(400));",
									"",
									"pm.test(\"missingField tag\", () => pm.expect(pm.response.text()).to.include(\"missingField\"));",
									"pm.test(\"params is lastName\", () => pm.expect(pm.response.json()[0].params[0]).is.eql(\"lastName\"));",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"UserB@domainB\",\n    \"firstName\": \"FirstB\",\n    \"password\" : \"passwordB\",\n    \"role\"     : 0,\n    \"termsAccepted\": true\n}"
						},
						"url": {
							"raw": "{{url}}/Prss",
							"host": [
								"{{url}}"
							],
							"path": [
								"Prss"
							]
						},
						"description": "\n"
					},
					"response": []
				},
				{
					"name": "Login Student A extra fields",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2e4711ca-bc8d-4f28-8da5-b4fe15c988de",
								"exec": [
									"loginCheck(pm);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"UserA@domainA\",\n    \"password\": \"passwordA\",\n    \"extra\": \"extra\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Ssns",
							"host": [
								"{{url}}"
							],
							"path": [
								"Ssns"
							],
							"query": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Login Student A missing username",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "638e4ac1-5ba8-4ec7-836d-feb903e65a58",
								"exec": [
									"pm.test(\"Status 400\", () => pm.response.to.have.status(400));",
									"    ",
									"pm.test(\"badLogin tag\", () => pm.expect(pm.response.text()).to.include(\"badLogin\"));",
									"pm.test(\"params is null\", () => pm.expect(pm.response.json()[0].params).is.eql(null));",
									"pm.test(\"nothing else present\", () => pm.expect(pm.response.json().length).is.eql(1));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"password\": \"passwordA\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Ssns",
							"host": [
								"{{url}}"
							],
							"path": [
								"Ssns"
							],
							"query": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Login Student A missing password",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cf9a94ae-6d2e-4166-8514-9b2a7f02fbb2",
								"exec": [
									"pm.test(\"Status 400\", () => pm.response.to.have.status(400));",
									"    ",
									"pm.test(\"badLogin tag\", () => pm.expect(pm.response.text()).to.include(\"badLogin\"));",
									"pm.test(\"params is null\", () => pm.expect(pm.response.json()[0].params).is.eql(null));",
									"pm.test(\"nothing else present\", () => pm.expect(pm.response.json().length).is.eql(1));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"passwordA\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Ssns",
							"host": [
								"{{url}}"
							],
							"path": [
								"Ssns"
							],
							"query": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Login Student A",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "abea44e6-96b4-4fa6-a599-bc617f59cb63",
								"exec": [
									"loginCheck(pm);",
									"",
									"pm.test(\"Reset ids\", () => pm.expect(pm.collectionVariables.get(\"curLogin\")).is.eql(\"1\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"UserA@domainA\",\n    \"password\": \"passwordA\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Ssns",
							"host": [
								"{{url}}"
							],
							"path": [
								"Ssns"
							],
							"query": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "POST new cnv Student A",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "234166a8-708a-44ce-a622-6357d5b231bc",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"    ",
									"locURL = pm.response.headers.get(\"Location\");",
									"locURL = locURL && locURL.split('/');",
									"pm.collectionVariables.set(\"CnvsA\", locURL[locURL.length-1]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\": \"CnvsA Title\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Cnvs",
							"host": [
								"{{url}}"
							],
							"path": [
								"Cnvs"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST duplicate Cnvs Student A",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "68f5b094-5de4-4fdf-8a8e-61839de4d332",
								"exec": [
									"pm.test(\"Status 400\", () => pm.response.to.have.status(400));",
									"",
									"pm.test(\"dupTitle present\", () => pm.expect(pm.response.text()).to.include(\"dupTitle\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\": \"CnvsA Title\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Cnvs",
							"host": [
								"{{url}}"
							],
							"path": [
								"Cnvs"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST big title Cnvs Student A",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9a5311b6-bf5d-431d-8a5e-9d261c531e68",
								"exec": [
									"pm.test(\"Status 400\", () => pm.response.to.have.status(400));",
									"",
									"pm.test(\"badValue present\", () => pm.expect(pm.response.text()).to.include(\"badValue\"));",
									"pm.test(\"Params is title\", () => pm.expect(pm.response.json()[0].params[0]).is.eql(\"title\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\": \"CnvsA Title but this time there is definitely too many characters to allow this as a title so there should be an error unless this is a buggy version of the server\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Cnvs",
							"host": [
								"{{url}}"
							],
							"path": [
								"Cnvs"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST no body Cnvs Student A",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "14d54d14-92e1-407f-b2af-0a46501ee1c7",
								"exec": [
									"pm.test(\"Status 400\", () => pm.response.to.have.status(400));",
									"",
									"pm.test(\"missingField present\", () => pm.expect(pm.response.text()).to.include(\"missingField\"));",
									"pm.test(\"Params is title\", () => pm.expect(pm.response.json()[0].params[0]).is.eql(\"title\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Cnvs",
							"host": [
								"{{url}}"
							],
							"path": [
								"Cnvs"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST empty title Cnvs Student A",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1bb71273-13bd-422b-b344-bf15b5431d3a",
								"exec": [
									"pm.test(\"Status 400\", () => pm.response.to.have.status(400));",
									"",
									"pm.test(\"missingField present\", () => pm.expect(pm.response.text()).to.include(\"missingField\"));",
									"pm.test(\"Params is title\", () => pm.expect(pm.response.json()[0].params[0]).is.eql(\"title\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\": \"\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Cnvs",
							"host": [
								"{{url}}"
							],
							"path": [
								"Cnvs"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST Cnvs extra body Student A",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8fa1452f-3712-4ae4-9693-cb41082fec6b",
								"exec": [
									"pm.test(\"Status 500\", () => pm.response.to.have.status(500));",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\": \"Extra junk\",\n\t\"Extra\": \"Here's some extra stuff with my request\"\t\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Cnvs",
							"host": [
								"{{url}}"
							],
							"path": [
								"Cnvs"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET cnvs/{cnvId} Student A",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "353efb1d-2745-45af-aff7-2a28b56515ac",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"",
									"pm.test(\"id is 1\", () => pm.expect(pm.response.json().id).is.eql(1));",
									"pm.test(\"title is CnvsA Title\", () => pm.expect(pm.response.json().title).is.eql(\"CnvsA Title\"));",
									"pm.test(\"Owner is student A\", () => pm.expect(pm.response.json().ownerId).is.eql(2));",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/Cnvs/{{CnvsA}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"Cnvs",
								"{{CnvsA}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT duplicate CnvsA Student A",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "99a941a4-4af5-4148-8ae6-94c83857c2a0",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"    "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\": \"CnvsA Title\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Cnvs/{{CnvsA}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"Cnvs",
								"{{CnvsA}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT no title CnvsA Student A",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d7cb8adf-735d-4704-8b64-5a921492f6e7",
								"exec": [
									"pm.test(\"Status 400\", () => pm.response.to.have.status(400));",
									"    ",
									"pm.test(\"missingField present\", () => pm.expect(pm.response.text()).to.include(\"missingField\"));",
									"pm.test(\"Params is title\", () => pm.expect(pm.response.json()[0].params[0]).is.eql(\"title\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Cnvs/{{CnvsA}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"Cnvs",
								"{{CnvsA}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT big title CnvsA",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "46ff4916-3772-47f4-af9d-a9b76bec7ac8",
								"exec": [
									"pm.test(\"Status 400\", () => pm.response.to.have.status(400));",
									"",
									"pm.test(\"badValue present\", () => pm.expect(pm.response.text()).to.include(\"badValue\"));",
									"pm.test(\"Params is title\", () => pm.expect(pm.response.json()[0].params[0]).is.eql(\"title\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\": \"CnvsA Title but this time there is definitely too many characters to allow this as a title so there should be an error unless this is a buggy version of the server\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Cnvs/{{CnvsA}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"Cnvs",
								"{{CnvsA}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT valid CnvsA Student A",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e3cec63d-85a9-43ef-bc07-ed62263471ed",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"    "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\": \"Revised CnvsA Title\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Cnvs/{{CnvsA}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"Cnvs",
								"{{CnvsA}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT extra stuff CnvsA Student A",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c0d402ee-d0d7-40c0-b07e-f2379f406f7b",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"    "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\": \"Revised CnvsA Title\",\n\t\"lastMessage\": \"0\",\n\t\"ownerId\": \"0\",\n\t\"id\": \"0\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Cnvs/{{CnvsA}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"Cnvs",
								"{{CnvsA}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "check updates CnvsA",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "447e4bf7-7626-444d-9ef5-d7f154a193c9",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"",
									"pm.test(\"id is 1\", () => pm.expect(pm.response.json().id).is.eql(1));",
									"pm.test(\"title is Revised CnvsA Title\", () => pm.expect(pm.response.json().title).is.eql(\"Revised CnvsA Title\"));",
									"pm.test(\"Owner is student A\", () => pm.expect(pm.response.json().ownerId).is.eql(2));",
									"pm.test(\"lastMessage is null\", () => pm.expect(pm.response.json().lastMessage).is.eql(null));",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/Cnvs/{{CnvsA}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"Cnvs",
								"{{CnvsA}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "failed person delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "98a2550d-710f-459d-910d-12d0d35a7f17",
								"exec": [
									"pm.test(\"Status 403\", () => pm.response.to.have.status(403));",
									"pm.test(\"No body\", () => !pm.response.to.have.body);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/Prss/1",
							"host": [
								"{{url}}"
							],
							"path": [
								"Prss",
								"1"
							]
						},
						"description": "\n"
					},
					"response": []
				},
				{
					"name": "Logout Student A",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7efd8031-dc9e-49a1-a5f2-bde36c5201b1",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"pm.test(\"No body\", () => !pm.response.to.have.body);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/Ssns/{{curLogin}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"Ssns",
								"{{curLogin}}"
							]
						},
						"description": "\n"
					},
					"response": []
				},
				{
					"name": "Admin Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fd54bbce-d24c-47d9-9b6d-8e613d165dff",
								"exec": [
									"loginCheck(pm);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"adm@11.com\",\n    \"password\": \"password\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Ssns",
							"host": [
								"{{url}}"
							],
							"path": [
								"Ssns"
							],
							"query": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "POST new cnv Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "60030e80-a0d7-4385-b481-4e70b24f14e6",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"    ",
									"locURL = pm.response.headers.get(\"Location\");",
									"locURL = locURL && locURL.split('/');",
									"pm.collectionVariables.set(\"AdminCnvs\", locURL[locURL.length-1]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\": \"Admin Cnvs Title\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Cnvs",
							"host": [
								"{{url}}"
							],
							"path": [
								"Cnvs"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET cnvs Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2740a81e-3ceb-4cfa-86b7-c6a04dd9f0ba",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"",
									"pm.test(\"Grabbed both Cnvs\", () => pm.expect(pm.response.json().length).is.eql(2));",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/Cnvs/",
							"host": [
								"{{url}}"
							],
							"path": [
								"Cnvs",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "GET cnvs query param Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "65b2de11-f32d-4813-931f-0c1542ccb855",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"",
									"pm.test(\"Grabbed both Cnvs\", () => pm.expect(pm.response.json().length).is.eql(1));",
									"pm.test(\"title is Revised CnvsA Title\", () => pm.expect(pm.response.json()[0].title).is.eql(\"Revised CnvsA Title\"));",
									"pm.test(\"Owner is student A\", () => pm.expect(pm.response.json()[0].ownerId).is.eql(2));",
									"pm.test(\"lastMessage is null\", () => pm.expect(pm.response.json()[0].lastMessage).is.eql(null));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/Cnvs/?owner=2",
							"host": [
								"{{url}}"
							],
							"path": [
								"Cnvs",
								""
							],
							"query": [
								{
									"key": "owner",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT valid CnvsA Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9d059d1e-a225-41e9-b4b2-79d6cca9f2aa",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\": \"Changed By Admin\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Cnvs/{{CnvsA}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"Cnvs",
								"{{CnvsA}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check change went through",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8a36334a-3606-47f7-8f93-90ccf566270a",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"",
									"pm.test(\"Grabbed both Cnvs\", () => pm.expect(pm.response.json().length).is.eql(1));",
									"pm.test(\"title is Changed By Admin\", () => pm.expect(pm.response.json()[0].title).is.eql(\"Changed By Admin\"));",
									"pm.test(\"Owner is student A\", () => pm.expect(pm.response.json()[0].ownerId).is.eql(2));",
									"pm.test(\"lastMessage is null\", () => pm.expect(pm.response.json()[0].lastMessage).is.eql(null));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/Cnvs/?owner=2",
							"host": [
								"{{url}}"
							],
							"path": [
								"Cnvs",
								""
							],
							"query": [
								{
									"key": "owner",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "POST message A1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "46bc9f27-75d1-4f1e-8bd8-d635e6076fc2",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"    ",
									"locURL = pm.response.headers.get(\"Location\");",
									"locURL = locURL && locURL.split('/');",
									"pm.collectionVariables.set(\"MsgA1\", locURL[locURL.length-1]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"content\": \"Student A posted this msg\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Cnvs/{{CnvsA}}/Msgs",
							"host": [
								"{{url}}"
							],
							"path": [
								"Cnvs",
								"{{CnvsA}}",
								"Msgs"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST message A2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fc9c260c-09b3-480b-b6ef-4aa4a94a44bc",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"    ",
									"locURL = pm.response.headers.get(\"Location\");",
									"locURL = locURL && locURL.split('/');",
									"pm.collectionVariables.set(\"MsgA2\", locURL[locURL.length-1]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"content\": \"Student A posted this msg\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Cnvs/{{CnvsA}}/Msgs",
							"host": [
								"{{url}}"
							],
							"path": [
								"Cnvs",
								"{{CnvsA}}",
								"Msgs"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST message A3",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6e014144-9663-4dd9-9cb8-46d8888ffa52",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"    ",
									"locURL = pm.response.headers.get(\"Location\");",
									"locURL = locURL && locURL.split('/');",
									"pm.collectionVariables.set(\"MsgA3\", locURL[locURL.length-1]);",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"content\": \"Student A posted this msg\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Cnvs/{{CnvsA}}/Msgs",
							"host": [
								"{{url}}"
							],
							"path": [
								"Cnvs",
								"{{CnvsA}}",
								"Msgs"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST message A4 after a second",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ae521e38-6013-4642-8a00-5a687b4f7b1e",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"    ",
									"locURL = pm.response.headers.get(\"Location\");",
									"locURL = locURL && locURL.split('/');",
									"pm.collectionVariables.set(\"MsgA3\", locURL[locURL.length-1]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"content\": \"Student A posted this msg\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Cnvs/{{CnvsA}}/Msgs",
							"host": [
								"{{url}}"
							],
							"path": [
								"Cnvs",
								"{{CnvsA}}",
								"Msgs"
							]
						}
					},
					"response": []
				},
				{
					"name": "DEL CnvsA Admin Success",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fc88fa7d-aef9-458b-bbc6-fb9e586a7ac3",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"pm.test(\"No body\", () => !pm.response.to.have.body);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/Cnvs/{{CnvsA}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"Cnvs",
								"{{CnvsA}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET MsgA1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bb0ed6f4-b02b-452e-a009-fb257a379137",
								"exec": [
									"pm.test(\"Status 400\", () => pm.response.to.have.status(400));",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Msgs/{{MsgA1}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"Msgs",
								"{{MsgA1}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET MsgA2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "89a01797-b9eb-43a1-8729-2d5fb207dea9",
								"exec": [
									"pm.test(\"Status 400\", () => pm.response.to.have.status(400));",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Msgs/{{MsgA2}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"Msgs",
								"{{MsgA2}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET MsgA3",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8309f227-ffae-4ee4-8a37-7210af2d2e41",
								"exec": [
									"pm.test(\"Status 400\", () => pm.response.to.have.status(400));",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Msgs/{{MsgA3}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"Msgs",
								"{{MsgA3}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET MsgA3 query",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "944a3f36-d80f-4369-b6f2-0e089a6a5997",
								"exec": [
									"pm.test(\"Status 400\", () => pm.response.to.have.status(400));",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Msgs/{{MsgA3}}?not=used",
							"host": [
								"{{url}}"
							],
							"path": [
								"Msgs",
								"{{MsgA3}}"
							],
							"query": [
								{
									"key": "not",
									"value": "used"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "POST new CnvsAdmin2 Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "deccb986-6683-4244-892e-97a623a5e06b",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"    ",
									"locURL = pm.response.headers.get(\"Location\");",
									"locURL = locURL && locURL.split('/');",
									"pm.collectionVariables.set(\"AdminCnvs2\", locURL[locURL.length-1]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\": \"Admin Cnvs2 Title\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Cnvs",
							"host": [
								"{{url}}"
							],
							"path": [
								"Cnvs"
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "39fc08b8-dd0a-43f3-a915-8ec7710fa3dc",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"pm.test(\"No body\", () => !pm.response.to.have.body);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/Ssns/{{curLogin}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"Ssns",
								"{{curLogin}}"
							]
						},
						"description": "\n"
					},
					"response": []
				},
				{
					"name": "Login Student B",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2d916aad-437d-4de4-bf34-7b636864a2b8",
								"exec": [
									"loginCheck(pm);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"UserB@domainB\",\n    \"password\": \"passwordB\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Ssns",
							"host": [
								"{{url}}"
							],
							"path": [
								"Ssns"
							],
							"query": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "POST new CnvsB1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "848fd911-0371-48de-a380-7c607ff7beaf",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"    ",
									"locURL = pm.response.headers.get(\"Location\");",
									"locURL = locURL && locURL.split('/');",
									"pm.collectionVariables.set(\"UsrBCnvs\", locURL[locURL.length-1]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\": \"Student B Title\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Cnvs",
							"host": [
								"{{url}}"
							],
							"path": [
								"Cnvs"
							]
						}
					},
					"response": []
				},
				{
					"name": "DEL AdminCnvs2 Student B Failure",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ad21d961-860d-45a8-9356-c86ccfd845ae",
								"exec": [
									"pm.test(\"Status 403\", () => pm.response.to.have.status(403));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/Cnvs/{{AdminCnvs2}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"Cnvs",
								"{{AdminCnvs2}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT AdminCnvs2 Student B Failure",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b7670313-5544-4fed-8ef9-5a5247ac3f04",
								"exec": [
									"pm.test(\"Status 403\", () => pm.response.to.have.status(403));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\": \"Changed By Student B\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Cnvs/{{AdminCnvs2}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"Cnvs",
								"{{AdminCnvs2}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT AdminCnvs2 Student B dupTitle",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d31991d2-8417-4b7a-87a8-d36dc2d6dc9c",
								"exec": [
									"pm.test(\"Status 400\", () => pm.response.to.have.status(400));",
									"    ",
									"pm.test(\"dupTitle present\", () => pm.expect(pm.response.text()).to.include(\"dupTitle\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\": \"Admin Cnvs2 Title\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Cnvs/{{UsrBCnvs}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"Cnvs",
								"{{UsrBCnvs}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT AdminCnvs2 Student B extra",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "23ec4e14-90f8-4a37-8888-0166d8f01a6a",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\": \"new title\",\n\t\"lastMessage\": \"-1204\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Cnvs/{{UsrBCnvs}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"Cnvs",
								"{{UsrBCnvs}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT AdminCnvs2 Student B owner id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "70c24fee-38e5-45fb-add6-d277efae5baf",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\": \"new title\",\n\t\"ownerId\": \"0\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Cnvs/{{UsrBCnvs}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"Cnvs",
								"{{UsrBCnvs}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET check didnt go through",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "085c1725-55c6-45c7-88ea-30ccf54bb039",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"",
									"pm.test(\"Title check\", () => pm.expect(pm.response.json().title).is.eql(\"new title\"));",
									"pm.test(\"id check\", () => pm.expect(pm.response.json().id).is.eql(4));",
									"pm.test(\"ownerId Check\", () => pm.expect(pm.response.json().ownerId).is.eql(3));",
									"pm.test(\"lastMessageCheck\", () => pm.expect(pm.response.json().lastMessage).is.not.eql(\"-1204\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/Cnvs/{{UsrBCnvs}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"Cnvs",
								"{{UsrBCnvs}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET cnvs/{{AdminCnvs2}} Student B Success",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f0738bbc-4072-40c3-b1b5-1fdf3b7859ee",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"",
									"pm.test(\"Title check\", () => pm.expect(pm.response.json().title).is.eql(\"Admin Cnvs2 Title\"));",
									"pm.test(\"id check\", () => pm.expect(pm.response.json().id).is.eql(3));",
									"pm.test(\"ownerId Check\", () => pm.expect(pm.response.json().ownerId).is.eql(1));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/Cnvs/{{AdminCnvs2}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"Cnvs",
								"{{AdminCnvs2}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST message AdminCnvs Student B",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f2b6eafd-1467-4d13-a47a-970afede630f",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"    ",
									"locURL = pm.response.headers.get(\"Location\");",
									"locURL = locURL && locURL.split('/');",
									"pm.collectionVariables.set(\"AdminCnvsMsg1\", locURL[locURL.length-1]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"content\": \"Student B posted this msg\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Cnvs/{{AdminCnvs}}/Msgs",
							"host": [
								"{{url}}"
							],
							"path": [
								"Cnvs",
								"{{AdminCnvs}}",
								"Msgs"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST message to non existant conversation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bab9bb59-d0e9-4f3f-ad97-91641fbfdbb7",
								"exec": [
									"pm.test(\"Status 400\", () => pm.response.to.have.status(400));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"content\": \"Student B posted this msg\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Cnvs/1738/Msgs",
							"host": [
								"{{url}}"
							],
							"path": [
								"Cnvs",
								"1738",
								"Msgs"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST message2 AdminCnvs Student B",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "427116ae-b68b-446c-986e-986d60c433db",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"    ",
									"locURL = pm.response.headers.get(\"Location\");",
									"locURL = locURL && locURL.split('/');",
									"pm.collectionVariables.set(\"AdminCnvsMsg2\", locURL[locURL.length-1]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"content\": \"Student B posted this msg2\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Cnvs/{{AdminCnvs}}/Msgs",
							"host": [
								"{{url}}"
							],
							"path": [
								"Cnvs",
								"{{AdminCnvs}}",
								"Msgs"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST message3 AdminCnvs Student B",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "14eaf473-c27f-4d27-8042-aad9e01c4ab7",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"    ",
									"locURL = pm.response.headers.get(\"Location\");",
									"locURL = locURL && locURL.split('/');",
									"pm.collectionVariables.set(\"AdminCnvsMsg3\", locURL[locURL.length-1]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"content\": \"Student B posted this msg3\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Cnvs/{{AdminCnvs}}/Msgs",
							"host": [
								"{{url}}"
							],
							"path": [
								"Cnvs",
								"{{AdminCnvs}}",
								"Msgs"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST too many chars AdminCnvs Student B",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4c339344-9e31-4d72-8f04-e67692ffdcb3",
								"exec": [
									"pm.test(\"Status 400\", () => pm.response.to.have.status(400));",
									"    ",
									"pm.test(\"badValue present\", () => pm.expect(pm.response.text()).to.include(\"badValue\"));",
									"pm.test(\"Params is content\", () => pm.expect(pm.response.json()[0].params[0]).is.eql(\"content\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"content\": \"Over 5000 charactersLorem ipsum dolor sit amet, consectetur adipiscing elit. Sed sit amet vehicula mi. Duis dictum fringilla elit, pharetra sodales ipsum ultricies id. Phasellus eu sapien sed purus aliquet tristique eu non ex. Sed bibendum lectus sed dui fermentum imperdiet non at turpis. Ut libero dolor, dignissim at tempus sit amet, cursus nec arcu. Nullam ac erat quam. Donec at erat blandit, hendrerit lacus vitae, facilisis erat. Vivamus non massa diam. Etiam tempor tempor est, in pulvinar enim congue eu. Etiam sagittis felis hendrerit velit interdum, quis tincidunt nibh imperdiet. Mauris sit amet lectus ac nisl accumsan molestie consequat vitae tortor.Duis posuere finibus nibh vel tincidunt. Cras mollis est a tristique sagittis. Duis in sagittis arcu. Sed facilisis massa eu est molestie tempus. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Aliquam elementum convallis dolor. Praesent libero mi, lacinia sit amet ipsum sagittis, molestie hendrerit lorem. Maecenas eu magna purus. Suspendisse arcu ipsum, ullamcorper semper fermentum et, auctor a ante. Lorem ipsum dolor sit amet, consectetur adipiscing elit.Aliquam tincidunt nec ipsum eget ornare. Maecenas sodales justo non ante mollis facilisis. Nam libero tortor, suscipit at sodales sed, tempus vitae sapien. Ut eu justo iaculis, bibendum tellus rhoncus, ullamcorper ex. Cras vel egestas metus. In hac habitasse platea dictumst. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Nulla feugiat elementum pellentesque. Sed ac arcu ac augue lobortis convallis sit amet quis tellus. Proin venenatis massa sed nibh ornare vehicula.Ut quis ante cursus, accumsan dui eu, viverra mi. In eu pharetra lectus. Ut imperdiet congue scelerisque. Proin mauris purus, vehicula ac laoreet vel, vehicula in ligula. Nulla vitae velit sed lacus condimentum commodo. Mauris at luctus orci, id interdum tellus. Proin suscipit tristique est eget dapibus. Integer fringilla lacus id nunc bibendum, ut rhoncus magna convallis. Aenean molestie scelerisque interdum. In egestas elementum laoreet. Etiam feugiat metus auctor velit pellentesque auctor. Etiam eget aliquam diam, eu consectetur justo. Duis aliquam maximus mi, id pharetra elit ultrices eget. Duis pulvinar vulputate augue, non auctor sapien.Cras a risus sodales, hendrerit leo vitae, cursus libero. Donec ipsum sapien, elementum vitae ligula eget, gravida tempor purus. Praesent sed magna vel arcu accumsan faucibus. Duis consequat maximus sapien, commodo tempus sem. In fringilla euismod dignissim. Vestibulum libero massa, imperdiet nec sodales vitae, pellentesque vel sapien. Maecenas eros ligula, volutpat sed odio a, accumsan aliquam enim. Lorem ipsum dolor sit amet, consectetur adipiscing elit. In auctor justo vel lectus egestas finibus. Nullam elit massa, semper vel accumsan ac, dignissim sit amet odio. In vel vehicula massa. Curabitur sodales id neque sit amet eleifend. Pellentesque tristique lectus ut massa bibendum, vitae pretium mauris mollis. Nunc lacus purus, malesuada ac eros non, tempor facilisis diam. Nam sit amet dictum dolor.Ut feugiat sapien sed ipsum faucibus tincidunt. Aliquam non varius ante. Nam feugiat dignissim vestibulum. Mauris sollicitudin nibh vel purus tincidunt tincidunt. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Aliquam vitae mauris urna. Morbi posuere, urna a pulvinar vestibulum, ex augue ullamcorper lorem, sit amet sollicitudin ante mi id velit.Fusce pellentesque sagittis magna, nec finibus arcu molestie maximus. Pellentesque dignissim quam ac semper fermentum. Sed dapibus ante turpis, id dictum orci mollis accumsan. Morbi diam metus, scelerisque sit amet pretium luctus, maximus suscipit diam. Integer rutrum dignissim ligula in sodales. Maecenas in magna id purus semper vulputate. Praesent non mauris a est fermentum posuere id laoreet nibh. Morbi nisl lacus, pretium accumsan tristique non, congue in est. Duis commodo rhoncus mauris. Quisque condimentum metus ut porttitor suscipit. Vestibulum sodales, urna eget posuere egestas, urna sem porttitor nunc, at dapibus felis enim maximus justo. Vivamus maximus sem non rhoncus molestie.Integer vehicula odio eu diam hendrerit, eget ultricies velit laoreet. Aliquam ac dui elementum leo blandit hendrerit. Proin varius varius tortor, et ullamcorper tortor vulputate eget. Nullam ac rutrum leo, eu mollis leo. Sed id mollis magna. Mauris varius, diam sed tempor rutrum, sapien est placerat est, vel interdum ligula augue at augue. In tincidunt erat vel lacus scelerisque, a sagittis mauris pellentesque. Curabitur eget erat libero. Nulla pharetra consequat elit.Phasellus in ex sapien. Nulla at ex consectetur, ultricies nulla in, interdum tellus. Duis facilisis eget lectus ut cursus. Aliquam a feugiat turpis, a maximus nisl. Ut vulputate sit amet lectus in viverra. In vitae molestie dolor, nec laoreet eros. In enim risus, blandit vitae varius id, placerat fringilla dolor. Donec suscipit bibendum neque in volutpat. Duis porttitor eros elit, ullamcorper pharetra lorem consectetur non. Sed sit amet sodales neque. Sed ac felis turpis. Sed commodo hendrerit lorem et laoreet. Praesent sed imperdiet eros. Nam lacinia bibendum posuere. Nunc dapibus odio malesuada, lobortis tellus convallis, tincidunt urna. Sed tristique enim justo, vel ullamcorper neque dapibus quis.\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Cnvs/{{AdminCnvs}}/Msgs",
							"host": [
								"{{url}}"
							],
							"path": [
								"Cnvs",
								"{{AdminCnvs}}",
								"Msgs"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST no content chars AdminCnvs Student B",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "25bdf7d2-ee77-4490-9bb2-b900ea41960b",
								"exec": [
									"pm.test(\"Status 400\", () => pm.response.to.have.status(400));",
									"    ",
									"pm.test(\"missingField present\", () => pm.expect(pm.response.text()).to.include(\"missingField\"));",
									"pm.test(\"Params is content\", () => pm.expect(pm.response.json()[0].params[0]).is.eql(\"content\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Cnvs/{{AdminCnvs}}/Msgs",
							"host": [
								"{{url}}"
							],
							"path": [
								"Cnvs",
								"{{AdminCnvs}}",
								"Msgs"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST empty content chars AdminCnvs Student B",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "94524048-c615-4cc6-aefe-ebdbaf62d058",
								"exec": [
									"pm.test(\"Status 400\", () => pm.response.to.have.status(400));",
									"    ",
									"pm.test(\"missingField present\", () => pm.expect(pm.response.text()).to.include(\"missingField\"));",
									"pm.test(\"Params is content\", () => pm.expect(pm.response.json()[0].params[0]).is.eql(\"content\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"content\": \"\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Cnvs/{{AdminCnvs}}/Msgs",
							"host": [
								"{{url}}"
							],
							"path": [
								"Cnvs",
								"{{AdminCnvs}}",
								"Msgs"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Cnvs/{cnvId}/Msgs check",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fb376a81-e754-4171-acfe-c29100f7b3dc",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"    ",
									"pm.test(\"Grabbed All three msgs\", () => pm.expect(pm.response.json().length).is.eql(3));",
									"pm.test(\"content check\", () => pm.expect(pm.response.json()[0].content).is.eql(\"Student B posted this msg\"));",
									"pm.test(\"id check\", () => pm.expect(pm.response.json()[0].id).is.eql(5));",
									"pm.test(\"email check\", () => pm.expect(pm.response.json()[0].email).is.eql(\"UserB@domainB\"));",
									"pm.test(\"whenMade exists\", () => pm.expect(pm.response.json()[0].whenMade).not.eql(undefined));"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Cnvs/{{AdminCnvs}}/Msgs",
							"host": [
								"{{url}}"
							],
							"path": [
								"Cnvs",
								"{{AdminCnvs}}",
								"Msgs"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Cnvs/{cnvId}/Msgs dateTime 0",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d168d50b-c3dc-455e-96a4-98e8e711edb4",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"    ",
									"pm.test(\"Grabbed All three msgs\", () => pm.expect(pm.response.json().length).is.eql(3));",
									"pm.test(\"content check\", () => pm.expect(pm.response.json()[0].content).is.eql(\"Student B posted this msg\"));",
									"pm.test(\"id check\", () => pm.expect(pm.response.json()[0].id).is.eql(5));",
									"pm.test(\"email check\", () => pm.expect(pm.response.json()[0].email).is.eql(\"UserB@domainB\"));",
									"pm.test(\"whenMade exists\", () => pm.expect(pm.response.json()[0].whenMade).not.eql(undefined));"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Cnvs/{{AdminCnvs}}/Msgs/?dateTime=0",
							"host": [
								"{{url}}"
							],
							"path": [
								"Cnvs",
								"{{AdminCnvs}}",
								"Msgs",
								""
							],
							"query": [
								{
									"key": "dateTime",
									"value": "0"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Cnvs/{cnvId}/Msgs dateTime impossible",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fdbf0225-9d89-45c6-8ae8-6d9ea710d31f",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"    ",
									"pm.test(\"Grabbed No Msgs\", () => pm.expect(pm.response.json().length).is.eql(0));",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Cnvs/{{AdminCnvs}}/Msgs/?dateTime=10000000000000000000000",
							"host": [
								"{{url}}"
							],
							"path": [
								"Cnvs",
								"{{AdminCnvs}}",
								"Msgs",
								""
							],
							"query": [
								{
									"key": "dateTime",
									"value": "10000000000000000000000"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Cnvs/{cnvId}/Msgs dateTime impossible with num",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "dace9035-c1ce-4d43-9b28-4baebb2f30ec",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"    ",
									"pm.test(\"Grabbed No Msgs\", () => pm.expect(pm.response.json().length).is.eql(0));",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Cnvs/{{AdminCnvs}}/Msgs/?dateTime=10000000000000000000000&num=10",
							"host": [
								"{{url}}"
							],
							"path": [
								"Cnvs",
								"{{AdminCnvs}}",
								"Msgs",
								""
							],
							"query": [
								{
									"key": "dateTime",
									"value": "10000000000000000000000"
								},
								{
									"key": "num",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Cnvs/{cnvId}/Msgs dateTime 0 num 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fa5d0b83-588e-41ef-8235-1db07dd61724",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"    ",
									"pm.test(\"Grabbed only 2 Msgs\", () => pm.expect(pm.response.json().length).is.eql(2));",
									"pm.test(\"content check\", () => pm.expect(pm.response.json()[0].content).is.eql(\"Student B posted this msg\"));",
									"pm.test(\"id check\", () => pm.expect(pm.response.json()[0].id).is.eql(5));",
									"pm.test(\"email check\", () => pm.expect(pm.response.json()[0].email).is.eql(\"UserB@domainB\"));",
									"pm.test(\"whenMade exists\", () => pm.expect(pm.response.json()[0].whenMade).not.eql(undefined));",
									"",
									"pm.collectionVariables.set(\"curdateTime\", pm.response.json()[0].whenMade);"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Cnvs/{{AdminCnvs}}/Msgs/?dateTime=0&num=2",
							"host": [
								"{{url}}"
							],
							"path": [
								"Cnvs",
								"{{AdminCnvs}}",
								"Msgs",
								""
							],
							"query": [
								{
									"key": "dateTime",
									"value": "0"
								},
								{
									"key": "num",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Cnvs/{cnvId}/Msgs on dateTime",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d71df99d-8276-46e8-9213-5759fe13e29f",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"    ",
									"pm.test(\"Grabbed only 3 Msgs\", () => pm.expect(pm.response.json().length).is.eql(3));",
									"pm.test(\"content check\", () => pm.expect(pm.response.json()[0].content).is.eql(\"Student B posted this msg\"));",
									"pm.test(\"id check 1\", () => pm.expect(pm.response.json()[0].id).is.eql(5));",
									"pm.test(\"id check 2\", () => pm.expect(pm.response.json()[1].id).is.eql(6));",
									"pm.test(\"id check 3\", () => pm.expect(pm.response.json()[2].id).is.eql(7));",
									"pm.test(\"email check\", () => pm.expect(pm.response.json()[0].email).is.eql(\"UserB@domainB\"));",
									"pm.test(\"whenMade exists\", () => pm.expect(pm.response.json()[0].whenMade).not.eql(undefined));",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Cnvs/{{AdminCnvs}}/Msgs/?dateTime={{curdateTime}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"Cnvs",
								"{{AdminCnvs}}",
								"Msgs",
								""
							],
							"query": [
								{
									"key": "dateTime",
									"value": "{{curdateTime}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Msgs/{msgId} valid",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "410f6cb2-3adc-47f4-99cd-4edcead0a4a6",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"    ",
									"pm.test(\"content check\", () => pm.expect(pm.response.json().content).is.eql(\"Student B posted this msg\"));",
									"pm.test(\"email check\", () => pm.expect(pm.response.json().email).is.eql(\"UserB@domainB\"));",
									"pm.test(\"whenMade exists\", () => pm.expect(pm.response.json().whenMade).not.eql(undefined));",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Msgs/{{AdminCnvsMsg1}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"Msgs",
								"{{AdminCnvsMsg1}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Cnvs and set lastMessage",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "af60c340-0a02-4595-94f0-9388016eeda6",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"pm.collectionVariables.set(\"curlastMessage\", pm.response.json().lastMessage);"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Cnvs/{{AdminCnvs}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"Cnvs",
								"{{AdminCnvs}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout student b",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "12ff4a05-acd8-40c6-9864-2de57ae62ade",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"pm.test(\"No body\", () => !pm.response.to.have.body);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/Ssns/{{curLogin}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"Ssns",
								"{{curLogin}}"
							]
						},
						"description": "\n"
					},
					"response": []
				},
				{
					"name": "PUT cnvs/cnvId/Msgs bad request",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5feea8d0-fcc5-42c2-a873-87af4366ee02",
								"exec": [
									"pm.test(\"Status 401\", () => pm.response.to.have.status(401));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"msg\": \"I shouldn't be able to do this\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Cnvs/0/Msgs/",
							"host": [
								"{{url}}"
							],
							"path": [
								"Cnvs",
								"0",
								"Msgs",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Login Student A Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6f175357-127a-473e-92df-de3e3a5816a5",
								"exec": [
									"loginCheck(pm);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"UserA@domainA\",\n    \"password\": \"passwordA\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Ssns",
							"host": [
								"{{url}}"
							],
							"path": [
								"Ssns"
							],
							"query": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "NEW post cnvs",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3235fb1e-7bc4-4e6f-bf71-c876ec21b327",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"",
									"locURL = pm.response.headers.get(\"Location\");",
									"locURL = locURL && locURL.split('/');",
									"pm.collectionVariables.set(\"new\", locURL[locURL.length - 1]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\": \"NEW CNVS\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Cnvs",
							"host": [
								"{{url}}"
							],
							"path": [
								"Cnvs"
							]
						}
					},
					"response": []
				},
				{
					"name": "NEW GET cnvs",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7e6edc8d-28b4-401e-a15f-910263b9823f",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"",
									"pm.test(\"content check\", () => pm.expect(pm.response.json().length).is.eql(4));",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Cnvs/",
							"host": [
								"{{url}}"
							],
							"path": [
								"Cnvs",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "NEW del CNVS",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8f1137b7-15d2-4c79-b505-09616bad67af",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\": \"NEW CNVS\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Cnvs/{{new}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"Cnvs",
								"{{new}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "NEW GET cnvs after",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c5cca1cc-d595-4c14-9c58-4b75cb1c1115",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"",
									"pm.test(\"content check\", () => pm.expect(pm.response.json().length).is.eql(3));",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Cnvs/",
							"host": [
								"{{url}}"
							],
							"path": [
								"Cnvs",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Admin Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "87371260-c152-43e0-85ba-841b49d7ed72",
								"exec": [
									"loginCheck(pm);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"adm@11.com\",\n    \"password\": \"password\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Ssns",
							"host": [
								"{{url}}"
							],
							"path": [
								"Ssns"
							],
							"query": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Ssns before",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ecda1b48-6de7-4ff6-ad0f-b30fa59bc8b5",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"",
									"pm.test(\"got two sessions\", () => pm.expect(pm.response.json().length).is.eql(3));",
									"pm.test(\"id order check\", () => pm.expect(pm.response.json()[0].id).is.below(pm.response.json()[1].id));"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Ssns",
							"host": [
								"{{url}}"
							],
							"path": [
								"Ssns"
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove Student B",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "13228c82-244f-40d4-816d-06e7ab849890",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"pm.test(\"No body\", () => !pm.response.to.have.body);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/Prss/{{usrB}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"Prss",
								"{{usrB}}"
							]
						},
						"description": "\n"
					},
					"response": []
				},
				{
					"name": "Remove Student A",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ddd7fa6b-88cd-4236-aba3-3efb8295924b",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"pm.test(\"No body\", () => !pm.response.to.have.body);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/Prss/{{usrA}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"Prss",
								"{{usrA}}"
							]
						},
						"description": "\n"
					},
					"response": []
				},
				{
					"name": "GET Ssns after",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bb561c89-534e-4af3-955f-d3ab40bd4bd4",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"",
									"pm.test(\"got one sessions\", () => pm.expect(pm.response.json().length).is.eql(1));",
									"pm.test(\"id order check\", () => pm.expect(pm.response.json()[0].id).is.eql(5));"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Ssns",
							"host": [
								"{{url}}"
							],
							"path": [
								"Ssns"
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove msgs",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "abacf555-5e9e-42e9-aded-a827dd04c6ed",
								"exec": [
									"pm.test(\"Status 404\", () => pm.response.to.have.status(404));",
									"pm.test(\"No body\", () => !pm.response.to.have.body);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/Msgs/{{MsgA2}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"Msgs",
								"{{MsgA2}}"
							]
						},
						"description": "\n"
					},
					"response": []
				},
				{
					"name": "PUT cnvs/cnvId/Msgs bad request",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8b8d9b6a-e101-4ebb-8ed1-abfd4e8e3cee",
								"exec": [
									"pm.test(\"Status 404\", () => pm.response.to.have.status(404));",
									"pm.test(\"No body\", () => !pm.response.to.have.body);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"msg\": \"I shouldn't be able to do this\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Cnvs/0/Msgs/",
							"host": [
								"{{url}}"
							],
							"path": [
								"Cnvs",
								"0",
								"Msgs",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "DEL cnvs/cnvId/Msgs bad request",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9276e48c-0293-4ea2-9a86-0d030b76b646",
								"exec": [
									"pm.test(\"Status 404\", () => pm.response.to.have.status(404));",
									"pm.test(\"No body\", () => !pm.response.to.have.body);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"msg\": \"I shouldn't be able to do this\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Cnvs/0/Msgs/",
							"host": [
								"{{url}}"
							],
							"path": [
								"Cnvs",
								"0",
								"Msgs",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Msgs/{msgId} deleted",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "facbe83b-8a4d-4dd1-9fc4-12630dd397f5",
								"exec": [
									"pm.test(\"Status 400\", () => pm.response.to.have.status(400));",
									"    ",
									"pm.test(\"notFound present\", () => pm.expect(pm.response.text()).to.include(\"notFound\"));",
									"pm.test(\"params null\", () => pm.expect(pm.response.json()[0].params).is.eql(null));"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Msgs/{{AdminCnvsMsg1}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"Msgs",
								"{{AdminCnvsMsg1}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Cnvs/{cnvId} deleted",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ef22a666-0074-498b-8826-533da4a50783",
								"exec": [
									"pm.test(\"Status 400\", () => pm.response.to.have.status(400));",
									"    ",
									"pm.test(\"notFound present\", () => pm.expect(pm.response.text()).to.include(\"notFound\"));",
									"pm.test(\"params null\", () => pm.expect(pm.response.json()[0].params).is.eql(null));"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Cnvs/{{UsrBCnvs}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"Cnvs",
								"{{UsrBCnvs}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET check lastMessage times",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d96c010e-816f-4e3b-ba8f-77b474ab6c17",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"    ",
									"pm.test(\"Grabbed No Msgs\", () => pm.expect(pm.response.json().curlastMessage).not.eql(null));"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Cnvs/{{AdminCnvs}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"Cnvs",
								"{{AdminCnvs}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Clean slate resource",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9b238151-2680-424f-993c-844672b741ae",
								"exec": [
									"pm.test(\"Status 404\", () => pm.response.to.have.status(404));",
									"pm.test(\"No body\", () => !pm.response.to.have.body);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/DB/Prss",
							"host": [
								"{{url}}"
							],
							"path": [
								"DB",
								"Prss"
							]
						}
					},
					"response": []
				},
				{
					"name": "Clean slate",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2b154c5e-5308-4174-975c-d7fefd8fa39b",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"pm.test(\"No body\", () => !pm.response.to.have.body);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/DB",
							"host": [
								"{{url}}"
							],
							"path": [
								"DB"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "4 Case sensitive",
			"item": [
				{
					"name": "Admin Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bc7178cf-cc8d-4b4c-bdf6-f3b53352176d",
								"exec": [
									"pm.test(\"Status 401\", () => pm.response.to.have.status(401));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"adm@11.com\",\n    \"password\": \"password\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/ssns",
							"host": [
								"{{url}}"
							],
							"path": [
								"ssns"
							],
							"query": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "POST SSNS",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "26b0dbb7-9a1f-4217-973a-78279ba2ef05",
								"exec": [
									"pm.test(\"Status 401\", () => pm.response.to.have.status(401));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"adm@11.com\",\n    \"password\": \"password\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/SSNS",
							"host": [
								"{{url}}"
							],
							"path": [
								"SSNS"
							],
							"query": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Reset",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3588ddf5-f8c3-4200-a1e8-c747ad08ee20",
								"exec": [
									"pm.test(\"Status 401\", () => pm.response.to.have.status(401));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/db",
							"host": [
								"{{url}}"
							],
							"path": [
								"db"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST cnvs",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b4c65e80-bb03-4c8c-99e2-8fba0b11d8f4",
								"exec": [
									"pm.test(\"Status 401\", () => pm.response.to.have.status(401));",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{url}}/cnvs",
							"host": [
								"{{url}}"
							],
							"path": [
								"cnvs"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET prss",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d2ef6825-e8ad-45ed-aecf-395a16f59009",
								"exec": [
									"pm.test(\"Status 401\", () => pm.response.to.have.status(401));",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/prss",
							"host": [
								"{{url}}"
							],
							"path": [
								"prss"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET prss/id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3f75b380-c348-4c66-9fad-259d8a78249d",
								"exec": [
									"pm.test(\"Status 401\", () => pm.response.to.have.status(401));",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/prss/0",
							"host": [
								"{{url}}"
							],
							"path": [
								"prss",
								"0"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET msgs",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "36d2e01c-93ee-4933-b9be-96355a53473f",
								"exec": [
									"pm.test(\"Status 401\", () => pm.response.to.have.status(401));",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/msgs",
							"host": [
								"{{url}}"
							],
							"path": [
								"msgs"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET msgs Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ceff12ed-d630-44f6-8a17-34e665c71d1e",
								"exec": [
									"pm.test(\"Status 401\", () => pm.response.to.have.status(401));",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/MSGS",
							"host": [
								"{{url}}"
							],
							"path": [
								"MSGS"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "5 Likes",
			"item": [
				{
					"name": "Get Likes no login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "040ff9d2-9464-4fe6-a2b2-2904c27139f8",
								"exec": [
									"pm.test(\"Status 401\", () => pm.response.to.have.status(401));",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/Msgs/{{MsgA2}}/Likes?",
							"host": [
								"{{url}}"
							],
							"path": [
								"Msgs",
								"{{MsgA2}}",
								"Likes"
							],
							"query": [
								{
									"key": "",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Register Student A",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "795ee56b-08b3-4a62-84f8-9094467510df",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"",
									"let locURL",
									"locURL = pm.response.headers.get(\"Location\");",
									"locURL = locURL && locURL.split('/');",
									"",
									"pm.collectionVariables.set(\"usrA\", locURL[2]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"UserA@domainA\",\n    \"firstName\": \"FirstA\",\n    \"lastName\" : \"LastC\",\n    \"password\" : \"passwordA\",\n    \"role\"     : 0,\n    \"termsAccepted\": true\n}"
						},
						"url": {
							"raw": "{{url}}/Prss",
							"host": [
								"{{url}}"
							],
							"path": [
								"Prss"
							]
						},
						"description": "\n"
					},
					"response": []
				},
				{
					"name": "Register Student B",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4911833f-350c-423a-97b3-47d1180d6bf2",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"",
									"let locURL",
									"locURL = pm.response.headers.get(\"Location\");",
									"locURL = locURL && locURL.split('/');",
									"",
									"pm.collectionVariables.set(\"usrB\", locURL[2]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"UserB@domainA\",\n    \"firstName\": \"FirstB\",\n    \"lastName\" : \"LastA\",\n    \"password\" : \"passwordA\",\n    \"role\"     : 0,\n    \"termsAccepted\": true\n}"
						},
						"url": {
							"raw": "{{url}}/Prss",
							"host": [
								"{{url}}"
							],
							"path": [
								"Prss"
							]
						},
						"description": "\n"
					},
					"response": []
				},
				{
					"name": "Register Student C",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8277e55c-d91c-4f6b-b2de-bb3dc8fd33ff",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"",
									"let locURL",
									"locURL = pm.response.headers.get(\"Location\");",
									"locURL = locURL && locURL.split('/');",
									"",
									"pm.collectionVariables.set(\"usrB\", locURL[2]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"UserC@domainA\",\n    \"firstName\": \"FirstB\",\n    \"lastName\" : \"LastA\",\n    \"password\" : \"passwordA\",\n    \"role\"     : 0,\n    \"termsAccepted\": true\n}"
						},
						"url": {
							"raw": "{{url}}/Prss",
							"host": [
								"{{url}}"
							],
							"path": [
								"Prss"
							]
						},
						"description": "\n"
					},
					"response": []
				},
				{
					"name": "Register Student D",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ca59ab63-5d46-4fe4-93cd-ddef9f090d83",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"",
									"let locURL",
									"locURL = pm.response.headers.get(\"Location\");",
									"locURL = locURL && locURL.split('/');",
									"",
									"pm.collectionVariables.set(\"usrB\", locURL[2]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"UserD@domainA\",\n    \"firstName\": \"FirstA\",\n    \"lastName\" : \"LastA\",\n    \"password\" : \"passwordA\",\n    \"role\"     : 0,\n    \"termsAccepted\": true\n}"
						},
						"url": {
							"raw": "{{url}}/Prss",
							"host": [
								"{{url}}"
							],
							"path": [
								"Prss"
							]
						},
						"description": "\n"
					},
					"response": []
				},
				{
					"name": "Admin Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6334a398-5280-41d8-a215-46ca0fd27f43",
								"exec": [
									"loginCheck(pm);",
									"pm.test(\"Body is correct\", () => pm.response.to.have.body(''));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"adm@11.com\",\n    \"password\": \"password\",\n    \"id\": 9\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Ssns",
							"host": [
								"{{url}}"
							],
							"path": [
								"Ssns"
							],
							"query": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "POST new cnv Admin Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "44b5a659-97fe-4a7d-8f6b-56856f8716a4",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"",
									"locURL = pm.response.headers.get(\"Location\");",
									"locURL = locURL && locURL.split('/');",
									"pm.collectionVariables.set(\"AdminCnvs\", locURL[locURL.length - 1]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\": \"Admin Cnvs Title\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Cnvs",
							"host": [
								"{{url}}"
							],
							"path": [
								"Cnvs"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST message 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8a51d063-f514-4778-a833-5e6e4a2f2ab8",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"    ",
									"locURL = pm.response.headers.get(\"Location\");",
									"locURL = locURL && locURL.split('/');",
									"pm.collectionVariables.set(\"MsgA1\", locURL[locURL.length-1]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"content\": \"Student A posted this msg\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Cnvs/{{AdminCnvs}}/Msgs",
							"host": [
								"{{url}}"
							],
							"path": [
								"Cnvs",
								"{{AdminCnvs}}",
								"Msgs"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST message 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6866ce98-403c-4e88-8dfd-a56b52950172",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"    ",
									"locURL = pm.response.headers.get(\"Location\");",
									"locURL = locURL && locURL.split('/');",
									"pm.collectionVariables.set(\"MsgA2\", locURL[locURL.length-1]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"content\": \"Admin msg 2\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Cnvs/{{AdminCnvs}}/Msgs",
							"host": [
								"{{url}}"
							],
							"path": [
								"Cnvs",
								"{{AdminCnvs}}",
								"Msgs"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST message 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cf3d8089-e3df-42e1-8bb9-8f4d33fbe560",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"    ",
									"locURL = pm.response.headers.get(\"Location\");",
									"locURL = locURL && locURL.split('/');",
									"pm.collectionVariables.set(\"MsgA3\", locURL[locURL.length-1]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"content\": \"Student A posted this msg\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Cnvs/{{AdminCnvs}}/Msgs",
							"host": [
								"{{url}}"
							],
							"path": [
								"Cnvs",
								"{{AdminCnvs}}",
								"Msgs"
							]
						}
					},
					"response": []
				},
				{
					"name": "NEW get msgs num=0",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b1cb11fe-eaff-45cb-ba41-2f8b2998b31b",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"",
									"",
									"pm.test(\"got empty array\", () => pm.expect(pm.response.json().length).is.eql(0));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/Cnvs/{{AdminCnvs}}/Msgs?num=0",
							"host": [
								"{{url}}"
							],
							"path": [
								"Cnvs",
								"{{AdminCnvs}}",
								"Msgs"
							],
							"query": [
								{
									"key": "num",
									"value": "0"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Likes basic none",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "88c8951d-7609-4683-9bea-4e9a6fd43883",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/Msgs/{{MsgA2}}/Likes?",
							"host": [
								"{{url}}"
							],
							"path": [
								"Msgs",
								"{{MsgA2}}",
								"Likes"
							],
							"query": [
								{
									"key": "",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Like message 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "40895876-4850-44e0-968b-b4953f68babc",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"",
									"pm.test('Location URL correct', () => pm.expect(pm.response.headers.get('Location')).is.equal('/Msgs/1/Likes/1'));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{url}}/Msgs/{{MsgA1}}/Likes",
							"host": [
								"{{url}}"
							],
							"path": [
								"Msgs",
								"{{MsgA1}}",
								"Likes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Like message 1 Body",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "db345c95-71ff-46e4-b936-20371aa551cb",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"",
									"pm.test('Location URL correct', () => pm.expect(pm.response.headers.get('Location')).is.equal('/Msgs/1/Likes/1'));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"Body\": \"HERE'S A BODY\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Msgs/{{MsgA1}}/Likes",
							"host": [
								"{{url}}"
							],
							"path": [
								"Msgs",
								"{{MsgA1}}",
								"Likes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Like message 1 twice",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fbff645c-4d0a-4065-8bda-cb54f0db739b",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"",
									"pm.test('Location URL correct', () => pm.expect(pm.response.headers.get('Location')).is.equal('/Msgs/1/Likes/1'));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{url}}/Msgs/{{MsgA1}}/Likes",
							"host": [
								"{{url}}"
							],
							"path": [
								"Msgs",
								"{{MsgA1}}",
								"Likes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Like message 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f78fe05f-4485-438b-9498-1cfd37e2c602",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"",
									"pm.test('Location URL correct', () => pm.expect(pm.response.headers.get('Location')).is.equal('/Msgs/2/Likes/2'));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{url}}/Msgs/{{MsgA2}}/Likes",
							"host": [
								"{{url}}"
							],
							"path": [
								"Msgs",
								"{{MsgA2}}",
								"Likes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Like message does not exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7c2835df-c496-4a52-8dce-56e2ed290f4b",
								"exec": [
									"pm.test(\"Status 400\", () => pm.response.to.have.status(400));",
									"",
									"pm.test(\"Tag is notFound\", () => pm.expect(pm.response.json()[0].tag).is.equal('notFound'));",
									"pm.test(\"Params is null\", () => pm.expect(pm.response.json()[0].params).is.equal(null));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{url}}/Msgs/7/Likes",
							"host": [
								"{{url}}"
							],
							"path": [
								"Msgs",
								"7",
								"Likes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Likes basic",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7c6a5760-1caf-4ecc-9919-f52396e0342c",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"",
									"pm.test(\"got one like\", () => pm.expect(pm.response.json().length).is.eql(1));",
									"pm.test(\"check id\", () => pm.expect(pm.response.json()[0].id).is.equal(2));",
									"pm.test(\"check firstName\", () => pm.expect(pm.response.json()[0].firstName).is.equal(\"Joe\"));",
									"pm.test(\"check lastName\", () => pm.expect(pm.response.json()[0].lastName).is.equal(\"Admin\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/Msgs/{{MsgA2}}/Likes?",
							"host": [
								"{{url}}"
							],
							"path": [
								"Msgs",
								"{{MsgA2}}",
								"Likes"
							],
							"query": [
								{
									"key": "",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Likes 0",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1ee42e56-9e0a-4ada-88d2-7c829aaffb5c",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"",
									"pm.test(\"got empty array\", () => pm.expect(pm.response.json().length).is.eql(0));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/Msgs/{{MsgA2}}/Likes?num=0",
							"host": [
								"{{url}}"
							],
							"path": [
								"Msgs",
								"{{MsgA2}}",
								"Likes"
							],
							"query": [
								{
									"key": "num",
									"value": "0"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Liked message",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4568800b-81d2-4b6d-9960-cb77b0c458ad",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"",
									"pm.test(\"numLikes = 1\", () => pm.expect(pm.response.json().numLikes).is.eql(1));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/Msgs/{{MsgA2}}/",
							"host": [
								"{{url}}"
							],
							"path": [
								"Msgs",
								"{{MsgA2}}",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5c4ce3d6-da59-43be-a451-f56ff9d10734",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"pm.test(\"No body\", () => !pm.response.to.have.body);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/Ssns/{{curLogin}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"Ssns",
								"{{curLogin}}"
							]
						},
						"description": "\n"
					},
					"response": []
				},
				{
					"name": "Like message 1 No login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a27ff973-3b6a-4ae3-b318-29ee1c19024a",
								"exec": [
									"pm.test(\"Status 401\", () => pm.response.to.have.status(401));",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{url}}/Msgs/{{MsgA1}}/Likes",
							"host": [
								"{{url}}"
							],
							"path": [
								"Msgs",
								"{{MsgA1}}",
								"Likes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login student A",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f0a5ea55-9d45-42ff-9108-75d511b2d7d0",
								"exec": [
									"loginCheck(pm);",
									"pm.test(\"Body is correct\", () => pm.response.to.have.body(''));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"UserA@domainA\",\n    \"password\": \"passwordA\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Ssns",
							"host": [
								"{{url}}"
							],
							"path": [
								"Ssns"
							],
							"query": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Like message 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f7b15b46-7011-4897-bb53-db67664e5d62",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"    "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{url}}/Msgs/{{MsgA2}}/Likes",
							"host": [
								"{{url}}"
							],
							"path": [
								"Msgs",
								"{{MsgA2}}",
								"Likes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Likes basic",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a2ca686f-9cc6-4553-b111-ad12b889a10f",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"",
									"pm.test(\"got two likes\", () => pm.expect(pm.response.json().length).is.eql(2));",
									"pm.test(\"check id\", () => pm.expect(pm.response.json()[0].id).is.equal(2));",
									"pm.test(\"check firstName\", () => pm.expect(pm.response.json()[0].firstName).is.equal(\"Joe\"));",
									"pm.test(\"check lastName\", () => pm.expect(pm.response.json()[0].lastName).is.equal(\"Admin\"));",
									"",
									"pm.test(\"check id\", () => pm.expect(pm.response.json()[1].id).is.equal(3));",
									"pm.test(\"check firstName\", () => pm.expect(pm.response.json()[1].firstName).is.equal(\"FirstA\"));",
									"pm.test(\"check lastName\", () => pm.expect(pm.response.json()[1].lastName).is.equal(\"LastC\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/Msgs/{{MsgA2}}/Likes?",
							"host": [
								"{{url}}"
							],
							"path": [
								"Msgs",
								"{{MsgA2}}",
								"Likes"
							],
							"query": [
								{
									"key": "",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Likes basic num=1000",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7156c18a-d43a-424c-848a-7d80fc81a299",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"",
									"pm.test(\"got two likes\", () => pm.expect(pm.response.json().length).is.eql(2));",
									"pm.test(\"check id\", () => pm.expect(pm.response.json()[0].id).is.equal(2));",
									"pm.test(\"check firstName\", () => pm.expect(pm.response.json()[0].firstName).is.equal(\"Joe\"));",
									"pm.test(\"check lastName\", () => pm.expect(pm.response.json()[0].lastName).is.equal(\"Admin\"));",
									"",
									"pm.test(\"check id\", () => pm.expect(pm.response.json()[1].id).is.equal(3));",
									"pm.test(\"check firstName\", () => pm.expect(pm.response.json()[1].firstName).is.equal(\"FirstA\"));",
									"pm.test(\"check lastName\", () => pm.expect(pm.response.json()[1].lastName).is.equal(\"LastC\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/Msgs/{{MsgA2}}/Likes?num=1000",
							"host": [
								"{{url}}"
							],
							"path": [
								"Msgs",
								"{{MsgA2}}",
								"Likes"
							],
							"query": [
								{
									"key": "num",
									"value": "1000"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get message numLikes=2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "666629c7-da27-4478-a41c-6bc61dd1e6a2",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"",
									"pm.test(\"numLikes = 2\", () => pm.expect(pm.response.json().numLikes).is.eql(2));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/Msgs/{{MsgA2}}/",
							"host": [
								"{{url}}"
							],
							"path": [
								"Msgs",
								"{{MsgA2}}",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0a16aea8-da87-42bc-a235-c30d6b9fb21f",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"pm.test(\"No body\", () => !pm.response.to.have.body);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/Ssns/{{curLogin}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"Ssns",
								"{{curLogin}}"
							]
						},
						"description": "\n"
					},
					"response": []
				},
				{
					"name": "Login student B",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "31a4d809-c9bc-4d91-a051-71309e3f8f2f",
								"exec": [
									"loginCheck(pm);",
									"pm.test(\"Body is correct\", () => pm.response.to.have.body(''));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"UserB@domainA\",\n    \"password\": \"passwordA\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Ssns",
							"host": [
								"{{url}}"
							],
							"path": [
								"Ssns"
							],
							"query": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Like message 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3a9f3c19-38b1-4254-b49e-7f8d36f79829",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"    "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{url}}/Msgs/{{MsgA2}}/Likes",
							"host": [
								"{{url}}"
							],
							"path": [
								"Msgs",
								"{{MsgA2}}",
								"Likes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Likes basic",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9ac8138c-c0e2-46d9-add1-9501536f12de",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"",
									"pm.test(\"got three likes\", () => pm.expect(pm.response.json().length).is.eql(3));",
									"pm.test(\"check id\", () => pm.expect(pm.response.json()[0].id).is.equal(2));",
									"pm.test(\"check firstName\", () => pm.expect(pm.response.json()[0].firstName).is.equal(\"Joe\"));",
									"pm.test(\"check lastName\", () => pm.expect(pm.response.json()[0].lastName).is.equal(\"Admin\"));",
									"",
									"pm.test(\"check id\", () => pm.expect(pm.response.json()[1].id).is.equal(4));",
									"pm.test(\"check firstName\", () => pm.expect(pm.response.json()[1].firstName).is.equal(\"FirstB\"));",
									"pm.test(\"check lastName\", () => pm.expect(pm.response.json()[1].lastName).is.equal(\"LastA\"));",
									"",
									"pm.test(\"check id\", () => pm.expect(pm.response.json()[2].id).is.equal(3));",
									"pm.test(\"check firstName\", () => pm.expect(pm.response.json()[2].firstName).is.equal(\"FirstA\"));",
									"pm.test(\"check lastName\", () => pm.expect(pm.response.json()[2].lastName).is.equal(\"LastC\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/Msgs/{{MsgA2}}/Likes?",
							"host": [
								"{{url}}"
							],
							"path": [
								"Msgs",
								"{{MsgA2}}",
								"Likes"
							],
							"query": [
								{
									"key": "",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Likes num=2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cdfe95d9-4600-4d2f-b08d-e1d86789c407",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"",
									"pm.test(\"got two likes\", () => pm.expect(pm.response.json().length).is.eql(2));",
									"",
									"pm.test(\"check id\", () => pm.expect(pm.response.json()[0].id).is.equal(4));",
									"pm.test(\"check firstName\", () => pm.expect(pm.response.json()[0].firstName).is.equal(\"FirstB\"));",
									"pm.test(\"check lastName\", () => pm.expect(pm.response.json()[0].lastName).is.equal(\"LastA\"));",
									"",
									"pm.test(\"check id\", () => pm.expect(pm.response.json()[1].id).is.equal(3));",
									"pm.test(\"check firstName\", () => pm.expect(pm.response.json()[1].firstName).is.equal(\"FirstA\"));",
									"pm.test(\"check lastName\", () => pm.expect(pm.response.json()[1].lastName).is.equal(\"LastC\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/Msgs/{{MsgA2}}/Likes?num=2",
							"host": [
								"{{url}}"
							],
							"path": [
								"Msgs",
								"{{MsgA2}}",
								"Likes"
							],
							"query": [
								{
									"key": "num",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e1f5a536-ead6-45f2-bef5-4b2ad0521bf6",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"pm.test(\"No body\", () => !pm.response.to.have.body);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/Ssns/{{curLogin}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"Ssns",
								"{{curLogin}}"
							]
						},
						"description": "\n"
					},
					"response": []
				},
				{
					"name": "Admin Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8bcd75b4-a3c2-4777-91ec-0ed8e44f0b0e",
								"exec": [
									"loginCheck(pm);",
									"pm.test(\"Body is correct\", () => pm.response.to.have.body(''));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"adm@11.com\",\n    \"password\": \"password\",\n    \"id\": 9\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Ssns",
							"host": [
								"{{url}}"
							],
							"path": [
								"Ssns"
							],
							"query": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove Student A",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0955e222-eee7-4006-8f8b-c491b37e3e90",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"pm.test(\"No body\", () => !pm.response.to.have.body);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/Prss/{{usrA}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"Prss",
								"{{usrA}}"
							]
						},
						"description": "\n"
					},
					"response": []
				},
				{
					"name": "Get Likes basic",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d13c448b-c851-4487-841a-d0134805175c",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"",
									"pm.test(\"got two likes\", () => pm.expect(pm.response.json().length).is.eql(2));",
									"pm.test(\"check id\", () => pm.expect(pm.response.json()[0].id).is.equal(2));",
									"pm.test(\"check firstName\", () => pm.expect(pm.response.json()[0].firstName).is.equal(\"Joe\"));",
									"pm.test(\"check lastName\", () => pm.expect(pm.response.json()[0].lastName).is.equal(\"Admin\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/Msgs/{{MsgA2}}/Likes?",
							"host": [
								"{{url}}"
							],
							"path": [
								"Msgs",
								"{{MsgA2}}",
								"Likes"
							],
							"query": [
								{
									"key": "",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get message numLikes = 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "780a30b7-649b-4ddf-8ec3-b5f2d646cbcf",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"",
									"pm.test(\"numLikes = 2\", () => pm.expect(pm.response.json().numLikes).is.eql(2));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/Msgs/{{MsgA2}}/",
							"host": [
								"{{url}}"
							],
							"path": [
								"Msgs",
								"{{MsgA2}}",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove Student B",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5e69a4be-4c44-42ea-9106-6f9f7d0526ec",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"pm.test(\"No body\", () => !pm.response.to.have.body);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/Prss/{{usrB}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"Prss",
								"{{usrB}}"
							]
						},
						"description": "\n"
					},
					"response": []
				},
				{
					"name": "Get Likes basic Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7a77a750-4abe-4b88-b933-e62024d610b3",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"",
									"pm.test(\"got two likes\", () => pm.expect(pm.response.json().length).is.eql(2));",
									"pm.test(\"check id\", () => pm.expect(pm.response.json()[0].id).is.equal(2));",
									"pm.test(\"check firstName\", () => pm.expect(pm.response.json()[0].firstName).is.equal(\"Joe\"));",
									"pm.test(\"check lastName\", () => pm.expect(pm.response.json()[0].lastName).is.equal(\"Admin\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/Msgs/{{MsgA2}}/Likes?",
							"host": [
								"{{url}}"
							],
							"path": [
								"Msgs",
								"{{MsgA2}}",
								"Likes"
							],
							"query": [
								{
									"key": "",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get message numLikes = 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ca57297a-ee00-46cb-9995-4022be047022",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									"",
									"pm.test(\"numLikes = 2\", () => pm.expect(pm.response.json().numLikes).is.eql(2));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/Msgs/{{MsgA2}}/",
							"host": [
								"{{url}}"
							],
							"path": [
								"Msgs",
								"{{MsgA2}}",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "DEL cnvs/{cnvId} no login Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fb592ca5-878a-460c-b5ae-9b35b1472a39",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/Cnvs/{{AdminCnvs}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"Cnvs",
								"{{AdminCnvs}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Likes basic Copy Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a2c11073-bb69-4492-a924-ba229dac440f",
								"exec": [
									"pm.test(\"Status 200\", () => pm.response.to.have.status(400));",
									"",
									"pm.test(\"tags is not found\", () => pm.expect(pm.response.json()[0].tag).is.eql(\"notFound\"));",
									"pm.test(\"params is null\", () => pm.expect(pm.response.json()[0].params).is.eql(null));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/Msgs/{{MsgA2}}/Likes?",
							"host": [
								"{{url}}"
							],
							"path": [
								"Msgs",
								"{{MsgA2}}",
								"Likes"
							],
							"query": [
								{
									"key": "",
									"value": null
								}
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "70f555ef-1f9f-477c-880d-91a5efa6dc6b",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "d31780d3-7cb7-47c8-adb2-3fe12f4c847d",
				"type": "text/javascript",
				"exec": [
					"loginCheck = (pm) => {",
					"    pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
					"    let locURL;",
					"    ",
					"    pm.test(\"Location returned\", () => pm.response.to.have.header(\"Location\"));",
					"    pm.test(\"Cookie returned\", () => pm.response.to.have.header('Set-Cookie'));",
					"    pm.test(\"Cookie is CHSAuth\", () => pm.expect(pm.response.headers.get('Set-Cookie').startsWith(\"CHSAuth\")).is.true);",
					"",
					"    locURL = pm.response.headers.get(\"Location\");",
					"    locURL = locURL && locURL.split('/');",
					"    ",
					"",
					"    pm.collectionVariables.set(\"curLogin\", locURL[locURL.length-1]);",
					"}"
				]
			}
		}
	],
	"variable": [
		{
			"id": "6cf98778-16a4-4c18-ae94-722465ea4149",
			"key": "curLogin",
			"value": "",
			"type": "string"
		},
		{
			"id": "4e3d31ce-5b48-4ae8-aa43-fa4b53c0c23d",
			"key": "CnvsA",
			"value": "",
			"type": "string"
		},
		{
			"id": "8c44eeff-5961-455d-b574-de52ae02006c",
			"key": "AdminCnvs",
			"value": "",
			"type": "string"
		},
		{
			"id": "ed600b15-2658-4186-bec0-e27c2239e18e",
			"key": "AdminCnvs2",
			"value": "",
			"type": "string"
		},
		{
			"id": "6d9cd3f4-0d84-4bcd-8f05-dab6b7174f8c",
			"key": "AdminCnvs3",
			"value": "",
			"type": "string"
		},
		{
			"id": "2e204ff0-a2fa-4189-8064-105cbc061edb",
			"key": "AdminCnvsMsg1",
			"value": "",
			"type": "string"
		},
		{
			"id": "e3b55641-5547-4c20-b89f-49bb61de7483",
			"key": "curdateTime",
			"value": "",
			"type": "string"
		},
		{
			"id": "fec57811-6553-403c-831f-e521dc625ba6",
			"key": "AdminCnvsMsg2",
			"value": "",
			"type": "string"
		},
		{
			"id": "6a3ffcb4-9c72-4028-b25f-b9abb5277900",
			"key": "AdminCnvsMsg3",
			"value": "",
			"type": "string"
		},
		{
			"id": "40defd11-2d38-489d-97a2-4ecac582c609",
			"key": "curlastMessage",
			"value": "",
			"type": "string"
		},
		{
			"id": "c4ebfef7-0348-4b5e-80eb-72f64890c64d",
			"key": "Usr3Cnvs",
			"value": "",
			"type": "string"
		},
		{
			"id": "67da6bd4-73ca-4441-91be-e4b15a454d1e",
			"key": "UsrBCnvs",
			"value": "",
			"type": "string"
		},
		{
			"id": "8328c5da-fc28-4b13-967c-b3349cfa4894",
			"key": "noFirstName",
			"value": "",
			"type": "string"
		},
		{
			"id": "2e8c3e02-4a57-4f77-9341-cd65a20a6cae",
			"key": "jsonFirstName",
			"value": "",
			"type": "string"
		},
		{
			"id": "bbc793d3-0383-4839-872d-2e51a898ff91",
			"key": "injection",
			"value": "",
			"type": "string"
		},
		{
			"id": "3b9a7f6c-8f83-434f-9aa1-5d90e989ef04",
			"key": "noTerms",
			"value": "",
			"type": "string"
		},
		{
			"id": "1ef36088-e7c7-472d-92d8-3dcff027d261",
			"key": "MsgA1",
			"value": "",
			"type": "string"
		},
		{
			"id": "17597f11-7766-4dbb-abf3-adc643e8cef4",
			"key": "MsgA2",
			"value": "",
			"type": "string"
		},
		{
			"id": "71aa0320-22c6-4307-a5b2-02a34e2d147e",
			"key": "MsgA3",
			"value": "",
			"type": "string"
		},
		{
			"id": "921d63a9-a0d6-42db-80a8-ecdbef2c20f4",
			"key": "diffDomain",
			"value": "",
			"type": "string"
		},
		{
			"id": "56c20195-60db-41b0-9385-d550d9d2e6c9",
			"key": "usrK",
			"value": "",
			"type": "string"
		},
		{
			"id": "f7e9e74b-f597-439b-b1d3-16d189d9ac6b",
			"key": "timestampMsgA3",
			"value": "",
			"type": "string"
		},
		{
			"id": "b8415ffa-a29c-445f-8ba6-88b9bc949dac",
			"key": "lastMsg",
			"value": "",
			"type": "string"
		},
		{
			"id": "ab8eb4d9-2eec-41bb-b2ba-35291ca7d7e6",
			"key": "usrB",
			"value": "",
			"type": "string"
		},
		{
			"id": "2b8c898c-39dd-4a43-acd1-2579e9175888",
			"key": "usrA",
			"value": "",
			"type": "string"
		},
		{
			"id": "aafdf68d-e677-4e74-9404-d1855f235ea6",
			"key": "new",
			"value": "",
			"type": "string"
		}
	],
	"protocolProfileBehavior": {}
}